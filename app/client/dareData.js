module.exports = {
  collections: {
    "5009684ce78955fbcf405844": {
      "_id": "5009684ce78955fbcf405844",
      "dareIds": [
        "300000000000000000000000",
        "300000000000000000000001",
        "300000000000000000000002",
        "300000000000000000000003",
        "300000000000000000000004",
        "300000000000000000000005",
        "300000000000000000000006",
        "300000000000000000000007",
        "300000000000000000000008",
        "300000000000000000000009",
        "300000000000000000000010"
      ],
      "difficulty": 1,
      "title": "Rollin' Robots"
    },
    "30000000078955fbcf405844": {
      "_id": "30000000078955fbcf405844",
      "dareIds": [
        "300000000000000000000100",
        "300000000000000000000101",
        "300000000000000000000102",
        "300000000000000000000103",
        "300000000000000000000104",
        "300000000000000000000105",
        "300000000000000000000106",
        "300000000000000000000107",
        "300000000000000000000108",
        "300000000000000000000109",
        "300000000000000000000110"
      ],
      "difficulty": 2,
      "title": "Famous people"
    },
    "communityContributedDaresCollection": {
      "_id": "communityContributedDaresCollection",
      "dareIds": [
        "5075cb858d9dda020000002f",
        "5076ec4dab278d0200000005",
        "5173ddd876f1ae0200000107",
        "517445061e14cd0200000537",
        "5177bfd974f89c0200000052",
        "5190d667c8b92b02000000af",
        "51ba228cec49dc020000000a",
        "51ba2a4fec49dc020000000c",
        "51bda7898af98a020000001c",
        "51bdac0d8af98a0200000021",
        "52210602fa6f73020000001f",
        "522343d40f7a09020000001b",
        "53b9e860cc83850200be5bcb",
        "53c4aa13e1b33c02004ef297",
        "53e48b568d576802007c6a33",
        "5426f8bca5e2ac020076a9c7",
        "545f2a3b0eaf3e02006fb2f9",
        "54cbced0ce6b6c0300ef42b7",
        "54cbd27ece6b6c0300ef42b9",
        "54ce78db1f423303008b23e3",
        "559802096efea10300904a9a",
        "559d4f66941b2203007d75e3",
        "565f67479ac6aa030014af9e",
        "570108e08268ab030009ee0c",
        "57172540edc93303002f7f57",
        "573acfa49924ef03006f528e",
        "573aee8b9924ef03006f5299",
        "57afa656d125bf03004032d5",
        "57afab53d125bf03004032dd"
      ],
      "difficulty": 3,
      "title": "Community-contributed"
    }
  },
  dares: {
    "300000000000000000000000": { "_id" : "300000000000000000000000", "allDares" : { "RobotGoal" : { "totalGoals" : 1, "minGoals" : 1, "goalReward" : 50, "maxLines" : 0, "lineReward" : 0, "hidePreview" : true, "previewBlockSize" : 48 } }, "allOutputs" : { "robot" : { "readOnly" : true, "state" : "{\"columns\":5,\"rows\":5,\"initialX\":2,\"initialY\":4,\"initialAngle\":90,\"mazeObjects\":4,\"verticalActive\":[[false,false,false,false,false],[false,false,false,false,false],[false,false,false,false,false],[false,false,false,false,false],[false,false,false,false,false]],\"horizontalActive\":[[false,false,false,false,false],[false,false,false,true,false],[false,false,false,true,false],[false,false,false,true,false],[false,false,false,false,false]],\"blockGoal\":[[false,false,false,false,false],[false,false,false,false,false],[false,false,false,false,false],[false,true,false,false,false],[false,false,false,false,false]]}" } }, "configProgram" : "config.dare.type = \"RobotGoal\";\nconfig.dare.RobotGoal.goalReward = 50;\nconfig.dare.maxLines = 0;\nconfig.dare.lineReward = 0;\nconfig.dare.RobotGoal.previewBlockSize = 48;\nconfig.dare.hidePreview = true;\n\nconfig.outputs.robot.enabled = true;\nconfig.outputs.robot.readOnly = true;\n", "createdTime" : "2012-09-27T13:45:14.745Z", "description" : "<p>Before making games, we will go through the <strong>basics</strong> of programming in Javascript. We do this by moving a robot around. The goal is to move the robot to the <strong>green square</strong>.</p><p>On the right you can see a <a href=\"#arrow-left,750,65\">program</a>, which makes a robot move. You can see the robot by clicking on the <a href=\"#arrow-tab-robot\">robot tab</a>.</p><p>The program is not finished yet. Try to <strong>complete</strong> the program, and then click the submit button below.</p>", "editor" : { "text" : "robot.drive(1);\nrobot.turnLeft();\nrobot.drive(2);\nrobot.turnRight();\nrobot.drive(2);\n" }, "hidePreview" : true, "name" : "Driving around", "original" : "robot.drive(1);\nrobot.turnLeft();\nrobot.drive(2);\nrobot.turnRight();\nrobot.drive(2);\nrobot.turnRight();\nrobot.drive(3);", "outputStates" : { "robot" : "{\"columns\":5,\"rows\":5,\"initialX\":2,\"initialY\":4,\"initialAngle\":90,\"mazeObjects\":4,\"verticalActive\":[[false,false,false,false,false],[false,false,false,false,false],[false,false,false,false,false],[false,false,false,false,false],[false,false,false,false,false]],\"horizontalActive\":[[false,false,false,false,false],[false,false,false,true,false],[false,false,false,true,false],[false,false,false,true,false],[false,false,false,false,false]],\"blockGoal\":[[false,false,false,false,false],[false,false,false,false,false],[false,false,false,false,false],[false,true,false,false,false],[false,false,false,false,false]]}" }, "outputs" : [ "robot" ], "published" : true, "type" : "RobotGoal", "userId" : "f0a4cfd2-24d3-4b85-9d0d-0a946630d1f0" },
    "300000000000000000000009": { "_id" : "300000000000000000000009", "allDares" : { "ImageMatch" : { "speed" : 500, "minPercentage" : 97, "maxLines" : 10, "lineReward" : 10 } }, "allOutputs" : { "canvas" : { "size" : 256 }, "info" : { "commands" : [ { "id" : "canvas.getContext" }, { "id" : "context.fillRect" }, { "id" : "context.fillStyle" } ], "scope" : false } }, "configProgram" : "config.dare.type = \"ImageMatch\";\nconfig.dare.ImageMatch.speed = 500;\nconfig.dare.ImageMatch.minPercentage = 97;\nconfig.dare.maxLines = 10;\nconfig.dare.lineReward = 10;\nconfig.outputs.canvas.enabled = true;\nconfig.outputs.canvas.size = 256;\nconfig.outputs.info.enabled = true;\nconfig.outputs.info.commands = \"canvas.getContext,context.fillRect,context.fillStyle\";\nconfig.outputs.info.scope = false;\n", "createdTime" : "2012-09-27T13:45:14.746Z", "description" : "<p>You can already apply some stuff you have learned to <strong>drawing shapes</strong> on a canvas. For this dare you have to draw a simple animal using rectangles. We have already drawn the head for you.</p><p>Try <strong>dragging</strong> the numbers left and right to figure out what all the numbers do, and add the rectangles for the <strong>body and legs</strong>. You can also use the <a href=\"#arrow-tab-info\">info tab</a> for more information on drawing commands. Do not worry about the <var>var context = canvas.getContext(\"2d\");</var> line for now. If you like, you can try to give the animal a color.</p>", "editor" : { "text" : "var context = canvas.getContext(\"2d\");\n\ncontext.fillRect(150, 50, 50, 50);\n" }, "modifiedTime" : "2013-02-08T19:47:02.789Z", "name" : "Animal", "original" : "var context = canvas.getContext(\"2d\");\n\ncontext.fillRect(150, 50, 50, 50);\ncontext.fillRect(50, 100, 100, 50);\ncontext.fillRect(50, 150, 30, 50);\ncontext.fillRect(120, 150, 30, 50);", "outputStates" : { "robot" : "" }, "outputs" : [ "canvas", "info" ], "published" : true, "type" : "ImageMatch", "userId" : "f0a4cfd2-24d3-4b85-9d0d-0a946630d1f0" },
    "300000000000000000000001": { "_id" : "300000000000000000000001", "allDares" : { "RobotGoal" : { "totalGoals" : 1, "minGoals" : 1, "goalReward" : 50, "maxLines" : 10, "lineReward" : 10, "previewBlockSize" : 48 } }, "allOutputs" : { "robot" : { "readOnly" : true, "state" : "{\"columns\":5,\"rows\":5,\"initialX\":2,\"initialY\":4,\"initialAngle\":90,\"mazeObjects\":5,\"verticalActive\":[[false,false,false,false,false],[false,false,false,false,false],[false,false,false,false,false],[false,false,false,false,false],[false,false,false,false,false]],\"horizontalActive\":[[false,false,false,true,false],[false,false,false,true,false],[false,false,false,true,false],[false,false,false,true,false],[false,false,false,false,false]],\"blockGoal\":[[false,false,false,false,false],[false,true,false,false,false],[false,false,false,false,false],[false,false,false,false,false],[false,false,false,false,false]]}" } }, "configProgram" : "config.dare.type = \"RobotGoal\";\nconfig.dare.RobotGoal.goalReward = 50;\nconfig.dare.maxLines = 10;\nconfig.dare.lineReward = 10;\nconfig.dare.RobotGoal.previewBlockSize = 48;\n\nconfig.outputs.robot.enabled = true;\nconfig.outputs.robot.readOnly = true;\n", "createdTime" : "2012-09-27T13:45:14.745Z", "description" : "<p>Again, move the robot to the green square, as demonstrated in the <a href=\"#arrow-left,535,180\">preview</a>. To make it a bit more difficult, try to do it in as <strong>few lines</strong> of code as possible. It does not matter what route you take.</p><p>Note that the program we provided has an <strong>error</strong>. Move over the <a href=\"#arrow-up,557,70\">error icon</a> to see what is wrong.</p>", "editor" : { "text" : "robot.drive(3);\nrobot.turnRight();\n" }, "name" : "Another wall", "original" : "robot.drive(1);\nrobot.turnRight();\nrobot.drive(2);\nrobot.turnLeft();\nrobot.drive(2);\nrobot.turnLeft();\nrobot.drive(3);", "outputStates" : { "robot" : "{\"columns\":5,\"rows\":5,\"initialX\":2,\"initialY\":4,\"initialAngle\":90,\"mazeObjects\":5,\"verticalActive\":[[false,false,false,false,false],[false,false,false,false,false],[false,false,false,false,false],[false,false,false,false,false],[false,false,false,false,false]],\"horizontalActive\":[[false,false,false,true,false],[false,false,false,true,false],[false,false,false,true,false],[false,false,false,true,false],[false,false,false,false,false]],\"blockGoal\":[[false,false,false,false,false],[false,true,false,false,false],[false,false,false,false,false],[false,false,false,false,false],[false,false,false,false,false]]}" }, "outputs" : [ "robot" ], "published" : true, "type" : "RobotGoal", "userId" : "f0a4cfd2-24d3-4b85-9d0d-0a946630d1f0" },
    "300000000000000000000002": { "_id" : "300000000000000000000002", "allDares" : { "RobotGoal" : { "totalGoals" : 1, "minGoals" : 1, "goalReward" : 50, "maxLines" : 16, "lineReward" : 10, "previewBlockSize" : 48 } }, "allOutputs" : { "robot" : { "readOnly" : true, "state" : "{\"columns\":5,\"rows\":5,\"initialX\":4,\"initialY\":4,\"initialAngle\":90,\"mazeObjects\":12,\"verticalActive\":[[false,false,false,false,false],[false,false,false,false,false],[false,false,true,true,true],[true,true,true,true,false],[false,true,true,true,true]],\"horizontalActive\":[[false,false,false,false,false],[false,false,false,false,false],[false,false,false,false,false],[false,false,false,false,false],[false,false,false,false,false]],\"blockGoal\":[[false,false,false,true,false],[false,false,false,false,false],[false,false,false,false,false],[false,false,false,false,false],[false,false,false,false,false]]}" } }, "configProgram" : "config.dare.type = \"RobotGoal\";\nconfig.dare.RobotGoal.goalReward = 50;\nconfig.dare.maxLines = 16;\nconfig.dare.lineReward = 10;\nconfig.dare.RobotGoal.previewBlockSize = 48;\n\nconfig.outputs.robot.enabled = true;\nconfig.outputs.robot.readOnly = true;\n", "createdTime" : "2012-09-27T13:45:14.745Z", "description" : "<p>Again, move the robot to the green square in as few lines as you can.</p>", "editor" : { "text" : "robot.drive(4);\nrobot.turnLeft();\nrobot.drive(1);\nrobot.turnLeft();\nrobot.drive(2);\nrobot.drive(2);\nrobot.turnRight();\nrobot.drive(1);\nrobot.turnRight();\nrobot.drive(2);\n" }, "name" : "Moving some more", "original" : "robot.drive(4);\nrobot.turnLeft();\nrobot.drive(1);\nrobot.turnLeft();\nrobot.drive(4);\nrobot.turnRight();\nrobot.drive(1);\nrobot.turnRight();\nrobot.drive(3);\nrobot.turnLeft();\nrobot.drive(2);\nrobot.turnLeft();\nrobot.drive(2);", "outputStates" : { "robot" : "{\"columns\":5,\"rows\":5,\"initialX\":4,\"initialY\":4,\"initialAngle\":90,\"mazeObjects\":12,\"verticalActive\":[[false,false,false,false,false],[false,false,false,false,false],[false,false,true,true,true],[true,true,true,true,false],[false,true,true,true,true]],\"horizontalActive\":[[false,false,false,false,false],[false,false,false,false,false],[false,false,false,false,false],[false,false,false,false,false],[false,false,false,false,false]],\"blockGoal\":[[false,false,false,true,false],[false,false,false,false,false],[false,false,false,false,false],[false,false,false,false,false],[false,false,false,false,false]]}" }, "outputs" : [ "robot" ], "published" : true, "type" : "RobotGoal", "userId" : "f0a4cfd2-24d3-4b85-9d0d-0a946630d1f0" },
    "300000000000000000000003": { "_id" : "300000000000000000000003", "allDares" : { "RobotGoal" : { "totalGoals" : 3, "minGoals" : 3, "goalReward" : 50, "maxLines" : 20, "lineReward" : 10, "previewBlockSize" : 48 } }, "allOutputs" : { "robot" : { "readOnly" : true, "state" : "{\"columns\":5,\"rows\":5,\"initialX\":1,\"initialY\":4,\"initialAngle\":90,\"mazeObjects\":12,\"verticalActive\":[[false,false,false,false,false],[false,false,false,false,false],[false,false,true,false,false],[false,true,false,true,false],[false,false,true,false,false]],\"horizontalActive\":[[false,false,false,false,false],[false,false,true,false,false],[false,true,false,true,false],[false,false,true,false,true],[false,false,false,false,false]],\"blockGoal\":[[false,false,false,false,false],[false,true,false,false,false],[false,false,false,false,false],[true,false,false,false,false],[false,false,false,true,false]]}" } }, "configProgram" : "config.dare.type = \"RobotGoal\";\nconfig.dare.RobotGoal.goalReward = 50;\nconfig.dare.maxLines = 20;\nconfig.dare.lineReward = 10;\nconfig.dare.RobotGoal.previewBlockSize = 48;\n\nconfig.outputs.robot.enabled = true;\nconfig.outputs.robot.readOnly = true;\n", "createdTime" : "2012-09-27T13:45:14.745Z", "description" : "<p>This time you have to visit <strong>all three</strong> goals, in any order. Programmers always look for the fastest solution. Can you find a fast route?</p>", "editor" : {  }, "name" : "Multiple goals", "original" : "robot.drive(2);\nrobot.turnLeft();\nrobot.drive(1);\nrobot.turnRight();\nrobot.drive(1);\nrobot.turnRight();\nrobot.drive(2);\nrobot.turnRight();\nrobot.drive(1);\nrobot.turnLeft();\nrobot.drive(1);\nrobot.turnRight();\nrobot.drive(1);\nrobot.turnLeft();\nrobot.drive(1);\nrobot.turnLeft();\nrobot.drive(3);\nrobot.turnLeft();\nrobot.drive(1);", "outputStates" : { "robot" : "{\"columns\":5,\"rows\":5,\"initialX\":1,\"initialY\":4,\"initialAngle\":90,\"mazeObjects\":12,\"verticalActive\":[[false,false,false,false,false],[false,false,false,false,false],[false,false,true,false,false],[false,true,false,true,false],[false,false,true,false,false]],\"horizontalActive\":[[false,false,false,false,false],[false,false,true,false,false],[false,true,false,true,false],[false,false,true,false,true],[false,false,false,false,false]],\"blockGoal\":[[false,false,false,false,false],[false,true,false,false,false],[false,false,false,false,false],[true,false,false,false,false],[false,false,false,true,false]]}" }, "outputs" : [ "robot" ], "published" : true, "type" : "RobotGoal", "userId" : "f0a4cfd2-24d3-4b85-9d0d-0a946630d1f0" },
    "300000000000000000000004": { "_id" : "300000000000000000000004", "allDares" : { "RobotGoal" : { "totalGoals" : 7, "minGoals" : 5, "goalReward" : 50, "maxLines" : 11, "lineReward" : 10, "previewBlockSize" : 32 } }, "allOutputs" : { "robot" : { "readOnly" : true, "previewBlockSize" : 32, "state" : "{\"columns\":8,\"rows\":8,\"initialX\":0,\"initialY\":7,\"initialAngle\":90,\"mazeObjects\":7,\"verticalActive\":[[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false]],\"horizontalActive\":[[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false]],\"blockGoal\":[[true,false,false,false,false,false,false,false],[false,false,false,false,true,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,true],[false,false,false,false,true,false,false,false],[false,false,false,false,false,false,false,false],[true,false,false,false,false,false,false,true],[false,false,false,false,true,false,false,false]],\"numGoals\":1}" } }, "configProgram" : "config.dare.type = \"RobotGoal\";\nconfig.dare.RobotGoal.optionalGoals = 2;\nconfig.dare.RobotGoal.goalReward = 50;\nconfig.dare.maxLines = 11;\nconfig.dare.lineReward = 10;\nconfig.dare.RobotGoal.previewBlockSize = 32;\n\nconfig.outputs.robot.enabled = true;\nconfig.outputs.robot.readOnly = true;\n", "createdTime" : "2012-09-27T13:45:14.745Z", "description" : "<p>For this dare you just have to edit the numbers in the program. Move the mouse over a number and drag it to quickly change its value.</p> <p>You can get <strong>extra points</strong> by visiting all goals!</p>", "editor" : { "text" : "robot.drive(3);\nrobot.turnRight();\nrobot.drive(3);\nrobot.turnRight();\nrobot.drive(2);\nrobot.turnRight();\nrobot.drive(1);\nrobot.turnRight();\nrobot.drive(1);\nrobot.turnLeft();\nrobot.drive(1);\n" }, "name" : "Manipulation", "original" : "robot.drive(7);\nrobot.turnRight();\nrobot.drive(6);\nrobot.turnRight();\nrobot.drive(7);\nrobot.turnRight();\nrobot.drive(4);\nrobot.turnRight();\nrobot.drive(3);\nrobot.turnLeft();\nrobot.drive(1);", "outputStates" : { "robot" : "{\"columns\":8,\"rows\":8,\"initialX\":0,\"initialY\":7,\"initialAngle\":90,\"mazeObjects\":7,\"verticalActive\":[[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false]],\"horizontalActive\":[[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false]],\"blockGoal\":[[true,false,false,false,false,false,false,false],[false,false,false,false,true,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,true],[false,false,false,false,true,false,false,false],[false,false,false,false,false,false,false,false],[true,false,false,false,false,false,false,true],[false,false,false,false,true,false,false,false]],\"numGoals\":1}" }, "outputs" : [ "robot" ], "published" : true, "type" : "RobotGoal", "userId" : "f0a4cfd2-24d3-4b85-9d0d-0a946630d1f0" },
    "300000000000000000000005": { "_id" : "300000000000000000000005", "allDares" : { "RobotGoal" : { "totalGoals" : 5, "minGoals" : 5, "goalReward" : 50, "maxLines" : 22, "lineReward" : 10, "previewBlockSize" : 32 } }, "allOutputs" : { "robot" : { "readOnly" : true, "previewBlockSize" : 32, "state" : "{\"columns\":8,\"rows\":8,\"initialX\":5,\"initialY\":7,\"initialAngle\":90,\"mazeObjects\":48,\"verticalActive\":[[false,false,false,false,false,false,false,false],[false,false,false,true,false,false,false,false],[false,false,true,false,true,false,false,false],[false,false,false,true,false,true,false,false],[false,false,true,false,true,false,true,false],[false,true,false,true,false,true,false,true],[false,false,true,false,true,false,true,true],[false,false,false,true,false,true,true,true]],\"horizontalActive\":[[false,true,false,true,false,false,false,false],[false,true,true,false,true,false,false,false],[false,true,true,true,false,true,false,false],[false,true,true,false,true,false,true,false],[false,true,false,true,false,true,false,true],[false,false,true,false,true,false,true,false],[false,false,false,true,false,true,false,false],[false,false,false,false,true,false,false,false]],\"blockGoal\":[[false,false,false,false,false,false,false,false],[false,false,false,true,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,true,false,false],[false,true,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,true,false,false,false,false],[false,false,false,false,false,false,false,true]]}" }, "info" : { "commands" : [ { "id" : "jsmm.function", "examples" : [ 0 ] }, { "id" : "robot.drive" }, { "id" : "robot.turnLeft" }, { "id" : "robot.turnRight" } ], "scope" : false } }, "configProgram" : "config.dare.type = \"RobotGoal\";\nconfig.dare.RobotGoal.goalReward = 50;\nconfig.dare.maxLines = 22;\nconfig.dare.lineReward = 10;\nconfig.dare.RobotGoal.previewBlockSize = 32;\n\nconfig.outputs.robot.enabled = true;\nconfig.outputs.robot.readOnly = true;\nconfig.outputs.info.enabled = true;\nconfig.outputs.info.commands = \"jsmm.function[0],robot.drive,robot.turnLeft,robot.turnRight\";\nconfig.outputs.info.scope = false;\n", "createdTime" : "2012-09-27T13:45:14.745Z", "description" : "<p>When programming, you often want to use the same set of commands multiple times. To do this, you can make a <strong>function</strong>, in which you put the commands that you want to use more than once. You can write down the name of this function <strong>instead</strong> of these commands.</p> <p>In the provided <a href=\"#arrow-left,780,58\">program</a>, the name of the function is <var>leftright</var>, and you can call it by writing <var>leftright();</var>.</p> <p>Finish the program using <var>leftright();</var> multiple times. Use the <a href=\"#arrow-step\">step bar</a> to see what happens exactly.</p>", "editor" : { "text" : "function leftright() {\n  robot.drive(1);\n  robot.turnLeft();\n  robot.drive(1);\n  robot.turnRight();\n}\n\nleftright();\nleftright();\n" }, "name" : "Maze", "original" : "function leftright() {\n  robot.drive(1);\n  robot.turnLeft();\n  robot.drive(1);\n  robot.turnRight();\n}\n\nleftright();\nleftright();\nleftright();\nleftright();\nleftright();\nrobot.drive(1);\nrobot.turnRight();\nrobot.drive(4);\nrobot.turnRight();\nleftright();\nleftright();\nleftright();\nrobot.drive(3);", "outputStates" : { "robot" : "{\"columns\":8,\"rows\":8,\"initialX\":5,\"initialY\":7,\"initialAngle\":90,\"mazeObjects\":48,\"verticalActive\":[[false,false,false,false,false,false,false,false],[false,false,false,true,false,false,false,false],[false,false,true,false,true,false,false,false],[false,false,false,true,false,true,false,false],[false,false,true,false,true,false,true,false],[false,true,false,true,false,true,false,true],[false,false,true,false,true,false,true,true],[false,false,false,true,false,true,true,true]],\"horizontalActive\":[[false,true,false,true,false,false,false,false],[false,true,true,false,true,false,false,false],[false,true,true,true,false,true,false,false],[false,true,true,false,true,false,true,false],[false,true,false,true,false,true,false,true],[false,false,true,false,true,false,true,false],[false,false,false,true,false,true,false,false],[false,false,false,false,true,false,false,false]],\"blockGoal\":[[false,false,false,false,false,false,false,false],[false,false,false,true,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,true,false,false],[false,true,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,true,false,false,false,false],[false,false,false,false,false,false,false,true]]}" }, "outputs" : [ "robot", "info" ], "published" : true, "type" : "RobotGoal", "userId" : "f0a4cfd2-24d3-4b85-9d0d-0a946630d1f0" },
    "300000000000000000000006": { "_id" : "300000000000000000000006", "allDares" : { "RobotGoal" : { "totalGoals" : 9, "minGoals" : 9, "goalReward" : 50, "maxLines" : 20, "lineReward" : 10, "previewBlockSize" : 32 } }, "allOutputs" : { "robot" : { "readOnly" : true, "previewBlockSize" : 48, "state" : "{\"columns\":6,\"rows\":6,\"initialX\":0,\"initialY\":5,\"initialAngle\":90,\"mazeObjects\":26,\"verticalActive\":[[false,false,false,false,false,false],[false,false,false,false,true,false],[false,false,true,true,false,false],[false,true,false,false,false,false],[true,false,false,true,true,false],[false,true,false,false,false,false]],\"horizontalActive\":[[false,false,false,true,false,false],[false,false,true,false,true,false],[false,true,false,false,false,false],[false,false,true,false,false,false],[false,false,true,true,false,true],[false,false,false,false,true,false]],\"blockGoal\":[[false,false,true,false,true,false],[false,false,false,true,false,false],[true,false,false,false,false,false],[false,true,false,false,false,false],[true,false,false,true,false,false],[false,false,true,false,true,false]]}" }, "info" : { "commands" : [ { "id" : "jsmm.function", "examples" : [ 0 ] }, { "id" : "robot.drive" }, { "id" : "robot.turnLeft" }, { "id" : "robot.turnRight" } ], "scope" : false } }, "configProgram" : "config.dare.type = \"RobotGoal\";\nconfig.dare.RobotGoal.goalReward = 50;\nconfig.dare.maxLines = 20;\nconfig.dare.lineReward = 10;\nconfig.dare.RobotGoal.previewBlockSize = 32;\n\nconfig.outputs.robot.enabled = true;\nconfig.outputs.robot.readOnly = true;\nconfig.outputs.info.enabled = true;\nconfig.outputs.info.commands = \"jsmm.function[0],robot.drive,robot.turnLeft,robot.turnRight\";\nconfig.outputs.info.scope = false;\n", "createdTime" : "2012-09-27T13:45:14.745Z", "description" : "<p>For this you need to write your <strong>own</strong> function. You can try writing a program without a function, but note that you can only use <strong>20 lines</strong> (not counting empty lines and lines with only <var>}</var>).</p>", "editor" : {  }, "name" : "Zig-zag", "original" : "function zigzag() {\n  robot.drive(2);\n  robot.turnRight();\n  robot.drive(1);\n  robot.turnLeft();\n  robot.drive(1);\n  robot.turnLeft();\n  robot.drive(1);\n  robot.turnRight();\n}\n\nzigzag();\nrobot.drive(2);\nrobot.turnRight();\nrobot.drive(1);\nzigzag();\nrobot.drive(1);\nrobot.turnRight();\nrobot.drive(1);\nzigzag();", "outputStates" : { "robot" : "{\"columns\":6,\"rows\":6,\"initialX\":0,\"initialY\":5,\"initialAngle\":90,\"mazeObjects\":26,\"verticalActive\":[[false,false,false,false,false,false],[false,false,false,false,true,false],[false,false,true,true,false,false],[false,true,false,false,false,false],[true,false,false,true,true,false],[false,true,false,false,false,false]],\"horizontalActive\":[[false,false,false,true,false,false],[false,false,true,false,true,false],[false,true,false,false,false,false],[false,false,true,false,false,false],[false,false,true,true,false,true],[false,false,false,false,true,false]],\"blockGoal\":[[false,false,true,false,true,false],[false,false,false,true,false,false],[true,false,false,false,false,false],[false,true,false,false,false,false],[true,false,false,true,false,false],[false,false,true,false,true,false]]}" }, "outputs" : [ "robot", "info" ], "published" : true, "type" : "RobotGoal", "userId" : "f0a4cfd2-24d3-4b85-9d0d-0a946630d1f0" },
    "300000000000000000000007": { "_id" : "300000000000000000000007", "allDares" : { "RobotGoal" : { "totalGoals" : 1, "minGoals" : 1, "goalReward" : 50, "maxLines" : 20, "lineReward" : 10, "previewBlockSize" : 32 } }, "allOutputs" : { "robot" : { "readOnly" : true, "previewBlockSize" : 32, "state" : "{\"columns\":8,\"rows\":8,\"initialX\":0,\"initialY\":7,\"initialAngle\":90,\"mazeObjects\":50,\"verticalActive\":[[false,false,false,false,false,false,false,false],[false,true,true,true,true,true,true,true],[false,false,true,true,true,true,true,false],[false,false,false,true,true,true,false,false],[false,false,false,false,true,false,false,false],[false,false,false,true,true,false,false,false],[false,false,true,true,true,true,false,false],[false,true,true,true,true,true,true,false]],\"horizontalActive\":[[false,false,false,false,false,false,false,false],[false,true,false,false,false,false,false,false],[false,true,true,false,false,false,false,true],[false,true,true,true,false,false,true,true],[false,true,true,true,false,true,true,true],[false,true,true,false,false,false,true,true],[false,true,false,false,false,false,false,true],[false,false,false,false,false,false,false,false]],\"blockGoal\":[[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,true,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false]],\"numGoals\":1}" }, "info" : { "commands" : [ { "id" : "jsmm.function", "examples" : [ 0 ] }, { "id" : "robot.drive" }, { "id" : "robot.turnLeft" }, { "id" : "robot.turnRight" } ], "scope" : false } }, "configProgram" : "config.dare.type = \"RobotGoal\";\nconfig.dare.RobotGoal.goalReward = 50;\nconfig.dare.maxLines = 20;\nconfig.dare.lineReward = 10;\nconfig.dare.RobotGoal.previewBlockSize = 32;\n\nconfig.outputs.robot.enabled = true;\nconfig.outputs.robot.readOnly = true;\nconfig.outputs.info.enabled = true;\nconfig.outputs.info.commands = \"jsmm.function[0],robot.drive,robot.turnLeft,robot.turnRight\";\nconfig.outputs.info.scope = false;\n", "createdTime" : "2012-09-27T13:45:14.745Z", "description" : "<p>Sometimes you want to use the same commands, but only slightly different every time. In this dare, you want to move forward and then right, but with a different distance every time.</p><p>For this you can use an <strong>argument</strong> in the function. After the function name you give a name for the argument, and the argument then <strong>contains</strong> the number you put in when calling the function. You can then use this name when calling the commands in the function.</p><p>We have created an example for you, try to see what happens when you <a href=\"#arrow-step\">step</a> through it.</p>", "editor" : { "text" : "function forwardRight(distance) {\n  robot.drive(distance);\n  robot.turnRight();\n}\n\nforwardRight(7);\n" }, "name" : "ForwardRight", "original" : "function forwardRight(distance) {\n  robot.drive(distance);\n  robot.turnRight();\n}\n\nforwardRight(7);\nforwardRight(7);\nforwardRight(7);\nforwardRight(6);\nforwardRight(6);\nforwardRight(5);\nforwardRight(5);\nforwardRight(4);\nforwardRight(4);\nforwardRight(3);\nforwardRight(3);\nforwardRight(2);\nforwardRight(2);\nforwardRight(1);\nforwardRight(1);", "outputStates" : { "robot" : "{\"columns\":8,\"rows\":8,\"initialX\":0,\"initialY\":7,\"initialAngle\":90,\"mazeObjects\":50,\"verticalActive\":[[false,false,false,false,false,false,false,false],[false,true,true,true,true,true,true,true],[false,false,true,true,true,true,true,false],[false,false,false,true,true,true,false,false],[false,false,false,false,true,false,false,false],[false,false,false,true,true,false,false,false],[false,false,true,true,true,true,false,false],[false,true,true,true,true,true,true,false]],\"horizontalActive\":[[false,false,false,false,false,false,false,false],[false,true,false,false,false,false,false,false],[false,true,true,false,false,false,false,true],[false,true,true,true,false,false,true,true],[false,true,true,true,false,true,true,true],[false,true,true,false,false,false,true,true],[false,true,false,false,false,false,false,true],[false,false,false,false,false,false,false,false]],\"blockGoal\":[[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,true,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false]],\"numGoals\":1}" }, "outputs" : [ "robot", "info" ], "published" : true, "type" : "RobotGoal", "userId" : "f0a4cfd2-24d3-4b85-9d0d-0a946630d1f0" },
    "300000000000000000000008": { "_id" : "300000000000000000000008", "allDares" : { "RobotGoal" : { "totalGoals" : 3, "minGoals" : 3, "goalReward" : 50, "maxLines" : 17, "lineReward" : 10, "previewBlockSize" : 32 } }, "allOutputs" : { "robot" : { "readOnly" : true, "previewBlockSize" : 32, "state" : "{\"columns\":7,\"rows\":7,\"initialX\":6,\"initialY\":6,\"initialAngle\":90,\"mazeObjects\":31,\"verticalActive\":[[false,false,false,false,false,false,false],[false,false,false,false,true,true,false],[false,false,false,false,false,true,true],[false,false,true,true,true,true,false],[false,false,false,true,true,true,true],[true,true,true,true,true,true,false],[false,true,true,true,true,true,true]],\"horizontalActive\":[[false,false,false,false,false,false,false],[false,false,false,false,true,false,false],[false,false,false,false,true,false,false],[false,false,true,false,false,false,false],[false,false,true,false,false,false,false],[false,false,false,false,false,false,false],[false,false,false,false,false,false,false]],\"blockGoal\":[[false,false,false,false,false,false,true],[false,false,false,false,false,false,false],[false,false,false,false,false,false,true],[false,false,false,false,false,false,false],[false,false,false,false,false,false,true],[false,false,false,false,false,false,false],[false,false,false,false,false,false,false]]}" }, "info" : { "commands" : [ { "id" : "jsmm.function", "examples" : [ 0 ] }, { "id" : "robot.drive" }, { "id" : "robot.turnLeft" }, { "id" : "robot.turnRight" } ], "scope" : false } }, "configProgram" : "config.dare.type = \"RobotGoal\";\nconfig.dare.RobotGoal.goalReward = 50;\nconfig.dare.maxLines = 17;\nconfig.dare.lineReward = 10;\nconfig.dare.RobotGoal.previewBlockSize = 32;\n\nconfig.outputs.robot.enabled = true;\nconfig.outputs.robot.readOnly = true;\nconfig.outputs.info.enabled = true;\nconfig.outputs.info.commands = \"jsmm.function[0],robot.drive,robot.turnLeft,robot.turnRight\";\nconfig.outputs.info.scope = false;\n", "createdTime" : "2012-09-27T13:45:14.745Z", "description" : "<p>For this one you probably need to make one (or more) functions, since you can use no more than <strong>17 lines</strong> of code.</p>", "editor" : {  }, "modifiedTime" : "2012-10-11T05:47:14.523Z", "name" : "More functions", "original" : "function move(distance) {\n  robot.drive(distance);\n  robot.turnLeft();\n  robot.drive(1);\n  robot.turnLeft();\n  robot.drive(distance);\n  robot.turnRight();\n  robot.drive(1);\n  robot.turnRight();\n}\n\nmove(6);\nmove(4);\nmove(2);", "outputStates" : { "robot" : "{\"columns\":7,\"rows\":7,\"initialX\":6,\"initialY\":6,\"initialAngle\":90,\"mazeObjects\":31,\"verticalActive\":[[false,false,false,false,false,false,false],[false,false,false,false,true,true,false],[false,false,false,false,false,true,true],[false,false,true,true,true,true,false],[false,false,false,true,true,true,true],[true,true,true,true,true,true,false],[false,true,true,true,true,true,true]],\"horizontalActive\":[[false,false,false,false,false,false,false],[false,false,false,false,true,false,false],[false,false,false,false,true,false,false],[false,false,true,false,false,false,false],[false,false,true,false,false,false,false],[false,false,false,false,false,false,false],[false,false,false,false,false,false,false]],\"blockGoal\":[[false,false,false,false,false,false,true],[false,false,false,false,false,false,false],[false,false,false,false,false,false,true],[false,false,false,false,false,false,false],[false,false,false,false,false,false,true],[false,false,false,false,false,false,false],[false,false,false,false,false,false,false]]}" }, "outputs" : [ "robot", "info" ], "published" : true, "type" : "RobotGoal", "userId" : "f0a4cfd2-24d3-4b85-9d0d-0a946630d1f0" },
    "300000000000000000000010": { "_id" : "300000000000000000000010", "allDares" : { "ImageMatch" : { "speed" : 200, "minPercentage" : 97, "maxLines" : 10, "lineReward" : 10 } }, "allOutputs" : { "canvas" : { "size" : 512 }, "info" : { "commands" : [ { "id" : "jsmm.arithmetic.numbers", "examples" : [ 1 ] }, { "id" : "jsmm.function", "examples" : [ 0 ] }, { "id" : "canvas.getContext" }, { "id" : "context.fillRect" }, { "id" : "context.fillStyle" } ], "scope" : false } }, "configProgram" : "config.dare.type = \"ImageMatch\";\nconfig.dare.ImageMatch.speed = 200;\nconfig.dare.ImageMatch.minPercentage = 97;\nconfig.dare.maxLines = 10;\nconfig.dare.lineReward = 10;\nconfig.outputs.canvas.enabled = true;\nconfig.outputs.canvas.size = 512;\nconfig.outputs.info.enabled = true;\nconfig.outputs.info.commands = \"jsmm.arithmetic.numbers[1],jsmm.function[0],canvas.getContext,context.fillRect,context.fillStyle\";\nconfig.outputs.info.scope = false;\n", "createdTime" : "2012-09-27T13:45:14.746Z", "description" : "<p>When you can draw one animal, you can draw a zoo, using a function. We have again provided you with a program that draws the head of some animals. If you find this dare too hard, you can leave it for now and try it again later.</p>", "editor" : { "text" : "var context = canvas.getContext(\"2d\");\n\nfunction animal(x, y) {\n  context.fillRect(x+150, y+50, 50, 50);\n}\n\nanimal(0, 0);\nanimal(250, 0);\nanimal(0, 250);\n" }, "name" : "Zoo", "original" : "var context = canvas.getContext(\"2d\");\n\nfunction animal(x, y) {\n  context.fillRect(x+150, y+50, 50, 50);\n  context.fillRect(x+50, y+100, 100, 50);\n  context.fillRect(x+50, y+150, 30, 50);\n  context.fillRect(x+120, y+150, 30, 50);\n}\n\nanimal(0, 0);\nanimal(250, 0);\nanimal(0, 250);\nanimal(250, 250);", "outputs" : [ "canvas", "info" ], "published" : true, "type" : "ImageMatch", "userId" : "f0a4cfd2-24d3-4b85-9d0d-0a946630d1f0" },
    "300000000000000000000100": { "_id" : "300000000000000000000100", "allDares" : { "ConsoleMatch" : { "speed" : 500, "minPercentage" : 97, "maxLines" : 5, "lineReward" : 10 } }, "allOutputs" : { "console" : {  }, "info" : { "commands" : [ { "id" : "jsmm.number" }, { "id" : "jsmm.string" }, { "id" : "console.log" } ], "scope" : false } }, "configProgram" : "config.dare.type = \"ConsoleMatch\";\nconfig.dare.ConsoleMatch.speed = 500;\nconfig.dare.ConsoleMatch.minPercentage = 97;\nconfig.dare.maxLines = 5;\nconfig.dare.lineReward = 10;\nconfig.outputs.console.enabled = true;\nconfig.outputs.info.enabled = true;\nconfig.outputs.info.commands = \"jsmm.number,jsmm.string,console.log\";\nconfig.outputs.info.scope = false;\n", "createdTime" : "2012-09-27T13:45:14.746Z", "description" : "<p>In this dare we will use the <a href=\"#arrow-tab-console\">console</a>, which is simply a box that contains text. With <var>console.log</var> you can add any value to the console. For example, <var>console.log(10);</var> adds the number <var>10</var> to the console.</p><p>You can also use strings, which are pieces of text, such as <var>\"Hello!\"</var>. Strings start and end with quotations (<var>\"</var>). For this dare you have to write a few sentences to the console.</p>", "editor" : { "text" : "console.log(\"Hello world!\");\n" }, "name" : "Hello world!", "original" : "console.log(\"Hello world!\");\nconsole.log(\"Right now I am learning programming.\");\nconsole.log(\"Soon I will make more interesting programs.\");", "outputs" : [ "console", "info" ], "published" : true, "type" : "ConsoleMatch", "userId" : "f0a4cfd2-24d3-4b85-9d0d-0a946630d1f0" },
    "300000000000000000000101": { "_id" : "300000000000000000000101", "allDares" : { "ConsoleMatch" : { "speed" : 50, "minPercentage" : 97, "maxLines" : 20, "lineReward" : 10 } }, "allOutputs" : { "console" : {  }, "info" : { "commands" : [ { "id" : "jsmm.number" }, { "id" : "jsmm.string" }, { "id" : "jsmm.arithmetic.strings" }, { "id" : "jsmm.function", "examples" : [ 0, 1 ] }, { "id" : "console.log" } ], "scope" : false } }, "configProgram" : "config.dare.type = \"ConsoleMatch\";\nconfig.dare.ConsoleMatch.speed = 50;\nconfig.dare.ConsoleMatch.minPercentage = 97;\nconfig.dare.maxLines = 20;\nconfig.dare.lineReward = 10;\nconfig.outputs.console.enabled = true;\nconfig.outputs.info.enabled = true;\nconfig.outputs.info.commands = \"jsmm.number,jsmm.string,jsmm.arithmetic.strings,jsmm.function[0],jsmm.function[1],console.log\";\nconfig.outputs.info.scope = false;\n", "createdTime" : "2012-09-27T13:45:14.746Z", "description" : "<p>For this dare you need to make a list of some famous people in computing, with their names and birth years, like the example below. We have already added the list for you, but you need to finish the function <var>person</var>.</p><p>In order to combine two strings, you can use <var>+</var>. For example, <var>\"Hello \" + \"world!\"</var> gives <var>\"Hello world!\"</var>.</p>", "editor" : { "text" : "function person(name, born) {\n  console.log(name + \"...\");\n}\n\nconsole.log(\"Famous people in computing:\");\nconsole.log(\"\");\nperson(\"Charles Babbage\", 1815);\nperson(\"Ada Lovelace\", 1815);\nperson(\"George Boole\", 1815);\nperson(\"Grace Hopper\", 1906);\nperson(\"Alan Turing\", 1912);\nperson(\"Douglas Engelbart\", 1925);\nperson(\"Bill Gates\", 1955);\nperson(\"Steve Jobs\", 1955);\nperson(\"Linus Torvalds\", 1969);\nperson(\"Tim Berners-Lee\", 1955);\nconsole.log(\"And many more...\");" }, "name" : "Some people", "original" : "function person(name, born) {\n  console.log(\"Name    : \" + name);\n  console.log(\"Born in : \" + born);\n  console.log(\"\");\n}\n\nconsole.log(\"Famous people in computing:\");\nconsole.log(\"\");\nperson(\"Charles Babbage\", 1815);\nperson(\"Ada Lovelace\", 1815);\nperson(\"George Boole\", 1815);\nperson(\"Grace Hopper\", 1906);\nperson(\"Alan Turing\", 1912);\nperson(\"Douglas Engelbart\", 1925);\nperson(\"Bill Gates\", 1955);\nperson(\"Steve Jobs\", 1955);\nperson(\"Linus Torvalds\", 1969);\nperson(\"Tim Berners-Lee\", 1955);\nconsole.log(\"And many more...\");", "outputs" : [ "console", "info" ], "published" : true, "type" : "ConsoleMatch", "userId" : "f0a4cfd2-24d3-4b85-9d0d-0a946630d1f0" },
    "300000000000000000000102": { "_id" : "300000000000000000000102", "allDares" : { "ConsoleMatch" : { "speed" : 200, "minPercentage" : 97, "maxLines" : 12, "lineReward" : 10 } }, "allOutputs" : { "console" : {  }, "info" : { "commands" : [ { "id" : "jsmm.number" }, { "id" : "jsmm.string" }, { "id" : "jsmm.arithmetic.numbers" }, { "id" : "jsmm.arithmetic.strings" }, { "id" : "jsmm.function", "examples" : [ 0, 1 ] }, { "id" : "console.log" } ], "scope" : false } }, "configProgram" : "config.dare.type = \"ConsoleMatch\";\nconfig.dare.ConsoleMatch.speed = 200;\nconfig.dare.ConsoleMatch.minPercentage = 97;\nconfig.dare.maxLines = 12;\nconfig.dare.lineReward = 10;\nconfig.outputs.console.enabled = true;\nconfig.outputs.info.enabled = true;\nconfig.outputs.info.commands = \"jsmm.number,jsmm.string,jsmm.arithmetic.numbers,jsmm.arithmetic.strings,jsmm.function[0],jsmm.function[1],console.log\";\nconfig.outputs.info.scope = false;\n", "createdTime" : "2012-09-27T13:45:14.746Z", "description" : "<p>Computers are very good at making calculations. In this dare you have a function <var>calculate</var>, with two arguments, <var>a</var> and <var>b</var>. You have to log the values of these variables, and then their multiplication.</p><p>To multiply two numbers you can use <var>*</var>, for example <var>3*11</var> gives <var>33</var>.</p>", "editor" : { "text" : "function calculate(a, b) {\n}\n\ncalculate(1, 1);\ncalculate(3, 5);\ncalculate(9, 8);\ncalculate(123456789, 0);\ncalculate(299792458, 3600);" }, "name" : "Calculating", "original" : "function calculate(a, b) {\n  console.log(\"a is \" + a);\n  console.log(\"b is \" + b);\n  console.log(\"a times b is \" + a*b);\n  console.log(\"\");\n}\n\ncalculate(1, 1);\ncalculate(3, 5);\ncalculate(9, 8);\ncalculate(123456789, 0);\ncalculate(299792458, 3600);", "outputs" : [ "console", "info" ], "published" : true, "type" : "ConsoleMatch", "userId" : "f0a4cfd2-24d3-4b85-9d0d-0a946630d1f0" },
    "300000000000000000000103": { "_id" : "300000000000000000000103", "allDares" : { "ConsoleMatch" : { "speed" : 200, "minPercentage" : 80, "maxLines" : 13, "lineReward" : 10 } }, "allOutputs" : { "console" : {  }, "info" : { "commands" : [ { "id" : "jsmm.number" }, { "id" : "jsmm.string" }, { "id" : "jsmm.arithmetic.numbers" }, { "id" : "jsmm.arithmetic.strings" }, { "id" : "jsmm.function", "examples" : [ 0, 1 ] }, { "id" : "console.log" }, { "id" : "console.clear" }, { "id" : "console.setColor" } ], "scope" : false } }, "configProgram" : "config.dare.type = \"ConsoleMatch\";\nconfig.dare.ConsoleMatch.speed = 200;\nconfig.dare.ConsoleMatch.minPercentage = 80;\nconfig.dare.maxLines = 13;\nconfig.dare.lineReward = 10;\nconfig.outputs.console.enabled = true;\nconfig.outputs.info.enabled = true;\nconfig.outputs.info.commands = \"jsmm.number,jsmm.string,jsmm.arithmetic.numbers,jsmm.arithmetic.strings,jsmm.function[0],jsmm.function[1],console.log,console.clear,console.setColor\";\nconfig.outputs.info.scope = false;\n", "createdTime" : "2012-09-27T13:45:14.746Z", "description" : "<p>For this dare you have to use all the basic math operators: addition, subtraction, multiplication, and division. See the <a href=\"#arrow-tab-info\">info tab</a> to find out which is which. We already added the line for multiplication. For bonus points, you can try to figure out what the last call to <var>calculate</var> should be.</p>", "editor" : { "text" : "function calculate(a, b) {\n  console.log(\"a * b = \" + (a*b));\n}\n\ncalculate(8, 4);\ncalculate(10, 20);\ncalculate(0.5, 0.75);\ncalculate(-500, 500);\n" }, "name" : "More math", "original" : "function calculate(a, b) {\n  console.log(\"a + b = \" + (a+b));\n  console.log(\"a - b = \" + (a-b));\n  console.log(\"a * b = \" + (a*b));\n  console.log(\"a / b = \" + (a/b));\n  console.log(\"\");\n}\n\ncalculate(8, 4);\ncalculate(10, 20);\ncalculate(0.5, 0.75);\ncalculate(-500, 500);\ncalculate(5, 4);", "outputs" : [ "console", "info" ], "published" : true, "type" : "ConsoleMatch", "userId" : "f0a4cfd2-24d3-4b85-9d0d-0a946630d1f0" },
    "300000000000000000000104": { "_id" : "300000000000000000000104", "allDares" : { "ConsoleMatch" : { "speed" : 200, "minPercentage" : 97, "maxLines" : 22, "lineReward" : 10 } }, "allOutputs" : { "console" : {  }, "info" : { "commands" : [ { "id" : "jsmm.number" }, { "id" : "jsmm.string" }, { "id" : "jsmm.arithmetic.numbers" }, { "id" : "jsmm.arithmetic.strings" }, { "id" : "jsmm.function", "examples" : [ 0, 1 ] }, { "id" : "console.log" }, { "id" : "console.clear" }, { "id" : "console.setColor" } ], "scope" : false } }, "configProgram" : "config.dare.type = \"ConsoleMatch\";\nconfig.dare.ConsoleMatch.speed = 200;\nconfig.dare.ConsoleMatch.minPercentage = 97;\nconfig.dare.maxLines = 22;\nconfig.dare.lineReward = 10;\nconfig.outputs.console.enabled = true;\nconfig.outputs.info.enabled = true;\nconfig.outputs.info.commands = \"jsmm.number,jsmm.string,jsmm.arithmetic.numbers,jsmm.arithmetic.strings,jsmm.function[0],jsmm.function[1],console.log,console.clear,console.setColor\";\nconfig.outputs.info.scope = false;\n", "createdTime" : "2012-09-27T13:45:14.746Z", "description" : "<p>Using subtraction you can now calculate how many years before 2013 the famous people were born.</p>", "editor" : { "text" : "function person(name, born) {\n}\n\nconsole.log(\"Famous people in computing:\");\nconsole.log(\"\");\nperson(\"Charles Babbage\", 1815);\nperson(\"Ada Lovelace\", 1815);\nperson(\"George Boole\", 1815);\nperson(\"Grace Hopper\", 1906);\nperson(\"Alan Turing\", 1912);\nperson(\"Douglas Engelbart\", 1925);\nperson(\"Bill Gates\", 1955);\nperson(\"Steve Jobs\", 1955);\nperson(\"Linus Torvalds\", 1969);\nperson(\"Tim Berners-Lee\", 1955);\nconsole.log(\"And many more...\");" }, "name" : "Years ago", "original" : "function person(name, born) {\n  console.log(\"Name    : \" + name);\n  console.log(\"Born in : \" + born);\n  console.log(\"(\" + (2013-born) + \" years ago)\");\n  console.log(\"\");\n}\n\nconsole.log(\"Famous people in computing:\");\nconsole.log(\"\");\nperson(\"Charles Babbage\", 1815);\nperson(\"Ada Lovelace\", 1815);\nperson(\"George Boole\", 1815);\nperson(\"Grace Hopper\", 1906);\nperson(\"Alan Turing\", 1912);\nperson(\"Douglas Engelbart\", 1925);\nperson(\"Bill Gates\", 1955);\nperson(\"Steve Jobs\", 1955);\nperson(\"Linus Torvalds\", 1969);\nperson(\"Tim Berners-Lee\", 1955);\nconsole.log(\"And many more...\");", "outputs" : [ "console", "info" ], "published" : true, "type" : "ConsoleMatch", "userId" : "f0a4cfd2-24d3-4b85-9d0d-0a946630d1f0" },
    "300000000000000000000105": { "_id" : "300000000000000000000105", "allDares" : { "ConsoleMatch" : { "speed" : 200, "minPercentage" : 97, "maxLines" : 11, "lineReward" : 10 } }, "allOutputs" : { "console" : {  }, "info" : { "commands" : [ { "id" : "jsmm.number" }, { "id" : "jsmm.string" }, { "id" : "jsmm.boolean" }, { "id" : "jsmm.arithmetic.numbers" }, { "id" : "jsmm.arithmetic.strings" }, { "id" : "jsmm.logic.equality" }, { "id" : "jsmm.logic.comparison" }, { "id" : "jsmm.logic.inversion" }, { "id" : "jsmm.logic.booleans" }, { "id" : "jsmm.function", "examples" : [ 0, 1 ] }, { "id" : "console.log" }, { "id" : "console.clear" }, { "id" : "console.setColor" } ], "scope" : false } }, "configProgram" : "config.dare.type = \"ConsoleMatch\";\nconfig.dare.ConsoleMatch.speed = 200;\nconfig.dare.ConsoleMatch.minPercentage = 97;\nconfig.dare.maxLines = 11;\nconfig.dare.lineReward = 10;\nconfig.outputs.console.enabled = true;\nconfig.outputs.info.enabled = true;\nconfig.outputs.info.commands = \"jsmm.number,jsmm.string,jsmm.boolean,jsmm.arithmetic.numbers,jsmm.arithmetic.strings,jsmm.logic.equality,jsmm.logic.comparison,jsmm.logic.inversion,jsmm.logic.booleans,jsmm.function[0],jsmm.function[1],console.log,console.clear,console.setColor\";\nconfig.outputs.info.scope = false;\n", "createdTime" : "2012-09-27T13:45:14.746Z", "description" : "<p>In this dare you have to compare numbers. There are a couple of operators for this, for example <var>a &lt; b</var> compares if <var>a</var> is less than <var>b</var>. See the <a href=\"#arrow-tab-info\">info tab</a> for a full list.</p><p>Every comparison operator returns a <strong>boolean</strong>, which is a value that is either <var>true</var> or <var>false</var>. You can use <var>console.log</var> to print booleans to the console, just as with numbers and strings. For example, <var>5 &lt; 10</var> gives <var>true</var>.</p>", "editor" : { "text" : "function comparisons(number) {\n  console.log(number + \" less than 10: \" + (number < 10));\n  console.log(number + \" equal to 10: \" + (number == 10));\n}\n\ncomparisons(-10);\n" }, "modifiedTime" : "2013-02-08T14:16:37.661Z", "name" : "Comparisons", "original" : "function comparisons(number) {\n  console.log(number + \" less than 10: \" + (number < 10));\n  console.log(number + \" equal to 10: \" + (number == 10));\n  console.log(number + \" more than 10: \" + (number > 10));\n  console.log(\"\");\n}\n\ncomparisons(-10);\ncomparisons(5);\ncomparisons(10);\ncomparisons(15);", "outputStates" : { "robot" : "" }, "outputs" : [ "console", "info" ], "published" : true, "type" : "ConsoleMatch", "userId" : "f0a4cfd2-24d3-4b85-9d0d-0a946630d1f0" },
    "300000000000000000000106": { "_id" : "300000000000000000000106", "allDares" : { "ConsoleMatch" : { "speed" : 200, "minPercentage" : 97, "maxLines" : 5, "lineReward" : 10 } }, "allOutputs" : { "console" : {  }, "info" : { "commands" : [ { "id" : "jsmm.number" }, { "id" : "jsmm.string" }, { "id" : "jsmm.boolean" }, { "id" : "jsmm.var" }, { "id" : "jsmm.assignment" }, { "id" : "jsmm.arithmetic.numbers" }, { "id" : "jsmm.arithmetic.strings" }, { "id" : "jsmm.logic.equality" }, { "id" : "jsmm.logic.comparison" }, { "id" : "jsmm.logic.inversion" }, { "id" : "jsmm.logic.booleans" }, { "id" : "jsmm.while" }, { "id" : "jsmm.function", "examples" : [ 0, 1 ] }, { "id" : "console.log" }, { "id" : "console.clear" }, { "id" : "console.setColor" } ], "scope" : true } }, "configProgram" : "config.dare.type = \"ConsoleMatch\";\nconfig.dare.ConsoleMatch.speed = 200;\nconfig.dare.ConsoleMatch.minPercentage = 97;\nconfig.dare.maxLines = 5;\nconfig.dare.lineReward = 10;\nconfig.outputs.console.enabled = true;\nconfig.outputs.info.enabled = true;\nconfig.outputs.info.commands = \"jsmm.number,jsmm.string,jsmm.boolean,jsmm.var,jsmm.assignment,jsmm.arithmetic.numbers,jsmm.arithmetic.strings,jsmm.logic.equality,jsmm.logic.comparison,jsmm.logic.inversion,jsmm.logic.booleans,jsmm.while,jsmm.function[0],jsmm.function[1],console.log,console.clear,console.setColor\";\nconfig.outputs.info.scope = true;\n", "createdTime" : "2012-09-27T13:45:14.746Z", "description" : "<p>The provided program prints the powers of 2 to the console. It uses a <strong>variable</strong> named <var>counter</var>, and a <strong>while loop</strong>. Try to figure out how it works by using the <a href=\"#arrow-step\">step button</a> and <a href=\"#arrow-tab-info\">info tab</a>. Then modify the program so that instead it prints the numbers from 1 to 20.</p>", "editor" : { "text" : "var counter = 1;\nwhile(counter < 300) {\n  console.log(counter);\n  counter = counter*2;\n}\n" }, "name" : "Counting", "original" : "var counter = 1;\nwhile(counter <= 20) {\n  console.log(counter);\n  counter = counter+1;\n}\n", "outputs" : [ "console", "info" ], "published" : true, "type" : "ConsoleMatch", "userId" : "f0a4cfd2-24d3-4b85-9d0d-0a946630d1f0" },
    "300000000000000000000107": { "_id" : "300000000000000000000107", "allDares" : { "RobotGoal" : { "totalGoals" : 1, "minGoals" : 1, "goalReward" : 50, "maxLines" : 7, "lineReward" : 10, "previewBlockSize" : 32 } }, "allOutputs" : { "robot" : { "readOnly" : true, "previewBlockSize" : 32, "state" : "{\"columns\":8,\"rows\":8,\"initialX\":4,\"initialY\":3,\"initialAngle\":90,\"mazeObjects\":45,\"verticalActive\":[[false,false,false,false,false,false,false,false],[false,true,true,true,true,true,true,true],[false,false,true,true,true,true,false,false],[false,false,false,true,true,false,false,false],[false,false,false,true,false,false,false,false],[false,false,true,true,false,false,false,false],[false,true,true,true,true,false,false,false],[true,true,true,true,true,true,false,false]],\"horizontalActive\":[[false,false,false,false,false,false,false,false],[false,true,false,false,false,false,false,false],[false,true,true,false,false,false,true,false],[false,true,true,true,false,true,true,false],[false,true,true,false,true,true,true,false],[false,true,false,false,false,true,true,false],[false,false,false,false,false,false,true,false],[false,false,false,false,false,false,false,false]],\"blockGoal\":[[false,false,false,false,false,false,false,true],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false]],\"numGoals\":1}" }, "info" : { "commands" : [ { "id" : "jsmm.number" }, { "id" : "jsmm.string" }, { "id" : "jsmm.boolean" }, { "id" : "jsmm.var" }, { "id" : "jsmm.assignment" }, { "id" : "jsmm.arithmetic.numbers" }, { "id" : "jsmm.arithmetic.strings" }, { "id" : "jsmm.logic.equality" }, { "id" : "jsmm.logic.comparison" }, { "id" : "jsmm.logic.inversion" }, { "id" : "jsmm.logic.booleans" }, { "id" : "jsmm.while" }, { "id" : "jsmm.function", "examples" : [ 0, 1 ] }, { "id" : "robot.drive" }, { "id" : "robot.turnLeft" }, { "id" : "robot.turnRight" } ], "scope" : true } }, "configProgram" : "config.dare.type = \"RobotGoal\";\nconfig.dare.RobotGoal.goalReward = 50;\nconfig.dare.maxLines = 7;\nconfig.dare.lineReward = 10;\nconfig.dare.RobotGoal.previewBlockSize = 32;\n\nconfig.outputs.robot.enabled = true;\nconfig.outputs.robot.readOnly = true;\nconfig.outputs.info.enabled = true;\nconfig.outputs.info.commands = \"jsmm.number,jsmm.string,jsmm.boolean,jsmm.var,jsmm.assignment,jsmm.arithmetic.numbers,jsmm.arithmetic.strings,jsmm.logic.equality,jsmm.logic.comparison,jsmm.logic.inversion,jsmm.logic.booleans,jsmm.while,jsmm.function[0],jsmm.function[1],robot.drive,robot.turnLeft,robot.turnRight\";\nconfig.outputs.info.scope = true;\n", "createdTime" : "2012-09-27T13:45:14.746Z", "description" : "<p>The robot has to follow a certain pattern, as you can see in the program. However, the current program is a bit long and repetitive. Make it shorter by using a counter and a while loop.</p>", "editor" : { "text" : "robot.drive(1);\nrobot.turnLeft();\nrobot.drive(2);\nrobot.turnLeft();\nrobot.drive(3);\nrobot.turnLeft();\nrobot.drive(4);\nrobot.turnLeft();\nrobot.drive(5);\nrobot.turnLeft();\nrobot.drive(6);\nrobot.turnLeft();\nrobot.drive(7);\nrobot.turnLeft();\n" }, "name" : "Spiraling out of control", "original" : "var counter = 1;\nwhile(counter <= 7) {\n  robot.drive(counter);\n  robot.turnLeft();\n  counter++;\n}", "outputStates" : { "robot" : "{\"columns\":8,\"rows\":8,\"initialX\":4,\"initialY\":3,\"initialAngle\":90,\"mazeObjects\":45,\"verticalActive\":[[false,false,false,false,false,false,false,false],[false,true,true,true,true,true,true,true],[false,false,true,true,true,true,false,false],[false,false,false,true,true,false,false,false],[false,false,false,true,false,false,false,false],[false,false,true,true,false,false,false,false],[false,true,true,true,true,false,false,false],[true,true,true,true,true,true,false,false]],\"horizontalActive\":[[false,false,false,false,false,false,false,false],[false,true,false,false,false,false,false,false],[false,true,true,false,false,false,true,false],[false,true,true,true,false,true,true,false],[false,true,true,false,true,true,true,false],[false,true,false,false,false,true,true,false],[false,false,false,false,false,false,true,false],[false,false,false,false,false,false,false,false]],\"blockGoal\":[[false,false,false,false,false,false,false,true],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false]],\"numGoals\":1}" }, "outputs" : [ "robot", "info" ], "published" : true, "type" : "RobotGoal", "userId" : "f0a4cfd2-24d3-4b85-9d0d-0a946630d1f0" },
    "300000000000000000000108": { "_id" : "300000000000000000000108", "allDares" : { "ConsoleMatch" : { "speed" : 200, "minPercentage" : 97, "maxLines" : 10, "lineReward" : 10 } }, "allOutputs" : { "console" : {  }, "info" : { "commands" : [ { "id" : "jsmm.number" }, { "id" : "jsmm.string" }, { "id" : "jsmm.boolean" }, { "id" : "jsmm.var" }, { "id" : "jsmm.assignment" }, { "id" : "jsmm.arithmetic.numbers" }, { "id" : "jsmm.arithmetic.strings" }, { "id" : "jsmm.logic.equality" }, { "id" : "jsmm.logic.comparison" }, { "id" : "jsmm.logic.inversion" }, { "id" : "jsmm.logic.booleans" }, { "id" : "jsmm.if" }, { "id" : "jsmm.else" }, { "id" : "jsmm.while" }, { "id" : "jsmm.function", "examples" : [ 0, 1 ] }, { "id" : "console.log" }, { "id" : "console.clear" }, { "id" : "console.setColor" } ], "scope" : true } }, "configProgram" : "config.dare.type = \"ConsoleMatch\";\nconfig.dare.ConsoleMatch.speed = 200;\nconfig.dare.ConsoleMatch.minPercentage = 97;\nconfig.dare.maxLines = 10;\nconfig.dare.lineReward = 10;\nconfig.outputs.console.enabled = true;\nconfig.outputs.info.enabled = true;\nconfig.outputs.info.commands = \"jsmm.number,jsmm.string,jsmm.boolean,jsmm.var,jsmm.assignment,jsmm.arithmetic.numbers,jsmm.arithmetic.strings,jsmm.logic.equality,jsmm.logic.comparison,jsmm.logic.inversion,jsmm.logic.booleans,jsmm.if,jsmm.else,jsmm.while,jsmm.function[0],jsmm.function[1],console.log,console.clear,console.setColor\";\nconfig.outputs.info.scope = true;\n", "createdTime" : "2012-09-27T13:45:14.746Z", "description" : "<p>The while-loop is used to keep repeating while some condition is true, but it is also useful to test only once whether some condition is true or false. For this you can use the <strong>if-else-statement</strong>, as seen in the <a href=\"#arrow-left,740,73\">example</a>. If the condition is true, the program continues to the first brackets. Else, it jumps to the <var>else</var> brackets. Complete the program using a while-loop to call the function a number of times.</p>", "editor" : { "text" : "function hello(hour) {\n  if (hour < 12) {\n    console.log(\"Good morning\");\n  } else {\n    console.log(\"\");\n  }\n}\n\nhello(10);\n" }, "name" : "Good morning, good afternoon", "original" : "function hello(hour) {\n  if (hour < 12) {\n    console.log(\"Good morning at \" + hour);\n  } else {\n    console.log(\"Good afternoon at \" + hour);\n  }\n}\n\nvar hour = 5;\nwhile(hour <= 19) {\n  hello(hour);\n  hour = hour + 1;\n}", "outputs" : [ "console", "info" ], "published" : true, "type" : "ConsoleMatch", "userId" : "f0a4cfd2-24d3-4b85-9d0d-0a946630d1f0" },
    "300000000000000000000109": { "_id" : "300000000000000000000109", "allDares" : { "ConsoleMatch" : { "speed" : 50, "minPercentage" : 97, "maxLines" : 22, "lineReward" : 10 } }, "allOutputs" : { "console" : {  }, "info" : { "commands" : [ { "id" : "jsmm.number" }, { "id" : "jsmm.string" }, { "id" : "jsmm.boolean" }, { "id" : "jsmm.var" }, { "id" : "jsmm.assignment" }, { "id" : "jsmm.arithmetic.numbers" }, { "id" : "jsmm.arithmetic.strings" }, { "id" : "jsmm.logic.equality" }, { "id" : "jsmm.logic.comparison" }, { "id" : "jsmm.logic.inversion" }, { "id" : "jsmm.logic.booleans" }, { "id" : "jsmm.if" }, { "id" : "jsmm.else" }, { "id" : "jsmm.while" }, { "id" : "jsmm.function", "examples" : [ 0, 1 ] }, { "id" : "console.log" }, { "id" : "console.clear" }, { "id" : "console.setColor" } ], "scope" : true } }, "configProgram" : "config.dare.type = \"ConsoleMatch\";\nconfig.dare.ConsoleMatch.speed = 50;\nconfig.dare.ConsoleMatch.minPercentage = 97;\nconfig.dare.maxLines = 22;\nconfig.dare.lineReward = 10;\nconfig.outputs.console.enabled = true;\nconfig.outputs.info.enabled = true;\nconfig.outputs.info.commands = \"jsmm.number,jsmm.string,jsmm.boolean,jsmm.var,jsmm.assignment,jsmm.arithmetic.numbers,jsmm.arithmetic.strings,jsmm.logic.equality,jsmm.logic.comparison,jsmm.logic.inversion,jsmm.logic.booleans,jsmm.if,jsmm.else,jsmm.while,jsmm.function[0],jsmm.function[1],console.log,console.clear,console.setColor\";\nconfig.outputs.info.scope = true;\n", "createdTime" : "2012-09-27T13:45:14.749Z", "description" : "<p>Extend the table of famous people to include the year of death for those who have passed away. For those still alive, hide this line entirely.</p>", "editor" : { "text" : "function person(name, born, died, knownFor) {\n}\n\nconsole.log(\"Famous people in computing:\");\nconsole.log(\"\");\nperson(\"Charles Babbage\", 1815, 1871, \"first computer\");\nperson(\"Ada Lovelace\", 1815, 1852, \"first programmer\");\nperson(\"George Boole\", 1815, 1864, \"Boolean logic\");\nperson(\"Grace Hopper\", 1906, 1992, \"first language\");\nperson(\"Alan Turing\", 1912, 1954, \"Turing machine\");\nperson(\"Douglas Engelbart\", 1925, 0, \"Computer mouse\");\nperson(\"Bill Gates\", 1955, 0, \"Microsoft\");\nperson(\"Steve Jobs\", 1955, 2011, \"Apple\");\nperson(\"Linus Torvalds\", 1969, 0, \"Linux\");\nperson(\"Tim Berners-Lee\", 1955, 0, \"World Wide Web\");\nconsole.log(\"And many more...\");" }, "name" : "More information", "original" : "function person(name, born, died, knownFor) {\n  console.log(\"Name      : \" + name);\n  console.log(\"Born in   : \" + born);\n  if (died > 0) {\n    console.log(\"Died in   : \" + died);\n  }\n  console.log(\"Known for : \" + knownFor);\n  console.log(\"\");\n}\n\nconsole.log(\"Famous people in computing:\");\nconsole.log(\"\");\nperson(\"Charles Babbage\", 1815, 1871, \"first computer\");\nperson(\"Ada Lovelace\", 1815, 1852, \"first programmer\");\nperson(\"George Boole\", 1815, 1864, \"Boolean logic\");\nperson(\"Grace Hopper\", 1906, 1992, \"first language\");\nperson(\"Alan Turing\", 1912, 1954, \"Turing machine\");\nperson(\"Douglas Engelbart\", 1925, 0, \"Computer mouse\");\nperson(\"Bill Gates\", 1955, 0, \"Microsoft\");\nperson(\"Steve Jobs\", 1955, 2011, \"Apple\");\nperson(\"Linus Torvalds\", 1969, 0, \"Linux\");\nperson(\"Tim Berners-Lee\", 1955, 0, \"World Wide Web\");\nconsole.log(\"And many more...\");", "outputs" : [ "console", "info" ], "published" : true, "type" : "ConsoleMatch", "userId" : "f0a4cfd2-24d3-4b85-9d0d-0a946630d1f0" },
    "300000000000000000000110": { "_id" : "300000000000000000000110", "allDares" : { "RobotGoal" : { "totalGoals" : 7, "minGoals" : 7, "goalReward" : 50, "maxLines" : 10, "lineReward" : 10, "previewBlockSize" : 32 } }, "allOutputs" : { "robot" : { "readOnly" : true, "previewBlockSize" : 32, "state" : "{\"columns\":8,\"rows\":8,\"initialX\":7,\"initialY\":7,\"initialAngle\":90,\"mazeObjects\":34,\"verticalActive\":[[false,false,false,false,false,false,false,false],[false,false,true,false,true,false,false,false],[false,false,true,false,false,false,false,false],[false,true,false,false,false,false,true,false],[false,true,false,false,false,true,true,false],[false,false,false,false,false,true,false,false],[false,false,false,false,false,true,false,false],[false,false,false,true,false,false,true,false]],\"horizontalActive\":[[false,false,false,false,true,false,false,false],[false,false,true,true,true,false,false,true],[false,true,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,true,false,false,false,false,false,true],[false,false,false,false,true,true,true,false],[false,false,false,true,true,false,false,true],[false,true,false,false,false,false,false,false]],\"blockGoal\":[[false,true,false,false,false,false,false,false],[false,false,false,false,false,false,true,false],[false,false,false,true,false,false,false,false],[false,false,false,false,false,false,false,false],[false,true,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,true,true,false,true,false],[false,false,false,false,false,false,false,false]],\"numGoals\":1}" }, "console" : {  }, "info" : { "commands" : [ { "id" : "jsmm.number" }, { "id" : "jsmm.string" }, { "id" : "jsmm.boolean" }, { "id" : "jsmm.var" }, { "id" : "jsmm.assignment" }, { "id" : "jsmm.arithmetic.numbers" }, { "id" : "jsmm.arithmetic.strings" }, { "id" : "jsmm.logic.equality" }, { "id" : "jsmm.logic.comparison" }, { "id" : "jsmm.logic.inversion" }, { "id" : "jsmm.logic.booleans" }, { "id" : "jsmm.if" }, { "id" : "jsmm.else" }, { "id" : "jsmm.while" }, { "id" : "jsmm.function", "examples" : [ 0, 1 ] }, { "id" : "robot.drive" }, { "id" : "robot.turnLeft" }, { "id" : "robot.turnRight" }, { "id" : "robot.detectWall" }, { "id" : "console.log" }, { "id" : "console.clear" }, { "id" : "console.setColor" } ], "scope" : true } }, "configProgram" : "config.dare.type = \"RobotGoal\";\nconfig.dare.RobotGoal.goalReward = 50;\nconfig.dare.maxLines = 10;\nconfig.dare.lineReward = 10;\nconfig.dare.RobotGoal.previewBlockSize = 32;\n\nconfig.outputs.robot.enabled = true;\nconfig.outputs.robot.readOnly = true;\nconfig.outputs.robot.enabled = true;\nconfig.outputs.console.enabled = true;\nconfig.outputs.info.enabled = true;\nconfig.outputs.info.commands = \"jsmm.number,jsmm.string,jsmm.boolean,jsmm.var,jsmm.assignment,jsmm.arithmetic.numbers,jsmm.arithmetic.strings,jsmm.logic.equality,jsmm.logic.comparison,jsmm.logic.inversion,jsmm.logic.booleans,jsmm.if,jsmm.else,jsmm.while,jsmm.function[0],jsmm.function[1],robot.drive,robot.turnLeft,robot.turnRight,robot.detectWall,console.log,console.clear,console.setColor\";\nconfig.outputs.info.scope = true;\n", "createdTime" : "2012-09-27T13:45:14.749Z", "description" : "<p>The robot can detect whether it is facing a wall, using <var>robot.detectWall()</var>. This returns <var>true</var> if there is a wall, and <var>false</var> if there isn't, as demonstrated using the <a href=\"#arrow-tab-console\">console</a>. This maze is set up so that at every wall the robot has to turn left. Make the robot navigate the maze using a loop instead of specifying its entire path in advance.</p>", "editor" : { "text" : "var counter = 0;\nwhile(counter <= 5) {\n  robot.drive(1);\n  console.log(robot.detectWall());\n  counter++;\n}" }, "name" : "Walls, walls, walls", "original" : "var counter = 0;\nwhile(counter <= 40) {\n  robot.drive(1);\n  if (robot.detectWall()) {\n    robot.turnLeft();\n  }\n  counter++;\n}", "outputStates" : { "robot" : "{\"columns\":8,\"rows\":8,\"initialX\":7,\"initialY\":7,\"initialAngle\":90,\"mazeObjects\":34,\"verticalActive\":[[false,false,false,false,false,false,false,false],[false,false,true,false,true,false,false,false],[false,false,true,false,false,false,false,false],[false,true,false,false,false,false,true,false],[false,true,false,false,false,true,true,false],[false,false,false,false,false,true,false,false],[false,false,false,false,false,true,false,false],[false,false,false,true,false,false,true,false]],\"horizontalActive\":[[false,false,false,false,true,false,false,false],[false,false,true,true,true,false,false,true],[false,true,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,true,false,false,false,false,false,true],[false,false,false,false,true,true,true,false],[false,false,false,true,true,false,false,true],[false,true,false,false,false,false,false,false]],\"blockGoal\":[[false,true,false,false,false,false,false,false],[false,false,false,false,false,false,true,false],[false,false,false,true,false,false,false,false],[false,false,false,false,false,false,false,false],[false,true,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,true,true,false,true,false],[false,false,false,false,false,false,false,false]],\"numGoals\":1}" }, "outputs" : [ "robot", "console", "info" ], "published" : true, "type" : "RobotGoal", "userId" : "f0a4cfd2-24d3-4b85-9d0d-0a946630d1f0" },
    "5075cb858d9dda020000002f": { "_id" : "5075cb858d9dda020000002f", "allDares" : { "RobotGoal" : { "goalReward" : 50, "optionalGoals" : 0, "hidePreview" : false, "previewBlockSize" : 48, "maxLines" : 0, "lineReward" : 10 }, "ImageMatch" : { "minPercentage" : 95, "hidePreview" : false, "speed" : 100, "maxLines" : 0, "lineReward" : 10 }, "ConsoleMatch" : { "minPercentage" : 100, "hidePreview" : false, "speed" : 100, "maxLines" : 0, "lineReward" : 10 } }, "allOutputs" : { "robot" : { "rows" : 8, "columns" : 8, "readOnly" : true }, "canvas" : { "size" : 512 }, "console" : {  }, "info" : { "scope" : true }, "events" : {  }, "math" : { "staticRandom" : true } }, "configProgram" : "config.dare.type = \"ConsoleMatch\";\nconfig.outputs.console.enabled = true;\nconfig.dare.maxLines = 15;\nconfig.dare.RobotGoal.previewBlockSize = 32;\n", "createdTime" : "2012-10-10T19:24:53.098Z", "description" : "Write a program that calculates the average of an array of numbers.", "editor" : { "hideToolbar" : false, "text" : "" }, "modifiedTime" : "2013-07-20T21:02:42.900Z", "name" : "Average", "original" : "function average(array) {\n  var total = 0;\n  \n  console.log(\"The average of\");\n  for(var i = 0; i < array.length; i += 1) {\n    total += array[i];\n    console.log(array[i]);\n  }\n  \n  console.log(\"is: \" + total / array.length);\n  console.log();\n}\n\naverage([0]);\naverage([1, 2, 3]);\naverage([1, 2, 3, 4]);\naverage([1, 4, 4, 4, 1]);\naverage([-12, -13, 512, 1337]);", "outputStates" : { "robot" : "" }, "outputs" : [ "canvas", "console" ], "published" : true, "type" : "ConsoleMatch", "userId" : "250bceb6-7018-486c-814c-a8cc56e9e789" },
    "5076ec4dab278d0200000005": { "_id" : "5076ec4dab278d0200000005", "allDares" : { "RobotGoal" : { "goalReward" : 50, "optionalGoals" : 0, "hidePreview" : false, "previewBlockSize" : 48, "maxLines" : 0, "lineReward" : 10 }, "ImageMatch" : { "minPercentage" : 95, "hidePreview" : false, "speed" : 100, "maxLines" : 0, "lineReward" : 10 }, "ConsoleMatch" : { "minPercentage" : 95, "hidePreview" : false, "speed" : 100, "maxLines" : 10, "lineReward" : 10 } }, "allOutputs" : { "robot" : { "rows" : 8, "columns" : 8, "readOnly" : true }, "canvas" : { "size" : 512 }, "console" : {  }, "info" : { "scope" : true }, "events" : {  }, "math" : { "staticRandom" : true } }, "configProgram" : "config.dare.type = \"ConsoleMatch\";\nconfig.outputs.console.enabled = true;\nconfig.dare.maxLines = 10;\n", "createdTime" : "2012-10-11T15:57:01.061Z", "description" : "Print out the first 30 numbers of the Fibonacci sequence.", "editor" : { "hideToolbar" : false, "text" : "console.log(\"Fibonacci's number \" + 0 + \" is: \" + 0);" }, "modifiedTime" : "2013-07-20T21:07:45.998Z", "name" : "Fibonacci", "original" : "var a = 0, b = 1, temp;\nfor(var i = 0; i < 30; i += 1) {\n  console.log(\"Fibonacci's number \" + i + \" is: \" + a);\n  temp = a;\n  a = b;\n  b = temp + b;\n}", "outputStates" : { "robot" : "" }, "outputs" : [ "console" ], "published" : true, "type" : "ConsoleMatch", "userId" : "250bceb6-7018-486c-814c-a8cc56e9e789" },
    "5173ddd876f1ae0200000107": { "_id" : "5173ddd876f1ae0200000107", "configProgram" : "config.outputs.console.enabled = true;\nconfig.outputs.robot.enabled = false;\nconfig.dare.maxLines = 15;\nconfig.dare.ConsoleMatch.minPercentage = 100;\nconfig.dare.type = \"ConsoleMatch\";", "createdTime" : "2013-04-21T12:38:48.034Z", "description" : "Write a program that prints the numbers from 1 to 100. But for multiples of three print “Fizz” instead of the number and for the multiples of five print “Buzz”. For numbers which are multiples of both three and five print “FizzBuzz”.", "editor" : { "hideToolbar" : false, "text" : "for(var i=1; i <= 100; i++){\n  if(i % 3 == 0){\n     console.log(\"Fizz\");\n  }\n  console.log(i);\n}" }, "modifiedTime" : "2013-04-21T12:52:38.770Z", "name" : "Fizz Buzz Dare", "original" : "for(var i=1; i < 101; i++){\n  var output = \"\";\n  if(i % 3 == 0){\n    output += \"Fizz\";\n  }\n  if(i % 5 == 0){\n    output += \"Buzz\";  \n  }\n  if(output == \"\"){\n    console.log(i); \n  }else{\n    console.log(output);  \n  }\n}", "outputStates" : { "robot" : "" }, "published" : true, "userId" : "b59dddf5-cf23-4005-881c-f0fa1078cdfe" },
    "517445061e14cd0200000537": { "_id" : "517445061e14cd0200000537", "configProgram" : "config.outputs.console.enabled = true;\nconfig.dare.type = \"ConsoleMatch\";\nconfig.dare.maxLines = 10;", "createdTime" : "2013-04-21T19:59:02.772Z", "description" : "Change getLargest to return the biggest of a, b, and c.", "editor" : { "hideToolbar" : false, "text" : "function getLargest(a, b, c) {\n  // instead of always returning a, change it to \n  // return the biggest of a, b, and c!\n  return a;\n}\n\nconsole.log(getLargest(2, 3, 4));\nconsole.log(getLargest(4, 3, 2));\nconsole.log(getLargest(3, 4, 2));\nconsole.log(getLargest(3, 2, 4));\nconsole.log(getLargest(17, 1, 8));\nconsole.log(getLargest(5, 5, 9));\nconsole.log(getLargest(1, 22, 3));\nconsole.log(getLargest(88, 87, 86));\nconsole.log(getLargest(4, 2, 3));" }, "modifiedTime" : "2013-04-21T20:12:45.503Z", "name" : "Find the largest", "original" : "function getLargest(a, b, c) {\n  var x = a;\n  if (b > x) {\n    x = b;\n  }\n  if (c > x) {\n    x = c;\n  }\n  return x;\n}\n\nconsole.log(getLargest(2, 3, 4));\nconsole.log(getLargest(4, 3, 2));\nconsole.log(getLargest(3, 4, 2));\nconsole.log(getLargest(3, 2, 4));\nconsole.log(getLargest(17, 1, 8));\nconsole.log(getLargest(5, 5, 9));\nconsole.log(getLargest(1, 22, 3));\nconsole.log(getLargest(88, 87, 86));\nconsole.log(getLargest(4, 2, 3));", "outputStates" : { "robot" : "" }, "published" : true, "userId" : "621a122f-9083-4add-a1ab-f834fd06501f" },
    "5177bfd974f89c0200000052": { "_id" : "5177bfd974f89c0200000052", "configProgram" : "config.outputs.robot.enabled = true;\nconfig.dare.maxLines = 10;\nconfig.dare.RobotGoal.previewBlockSize = 32;\n", "createdTime" : "2013-04-24T11:19:53.938Z", "description" : "Just do it!", "editor" : { "hideToolbar" : false, "text" : "// Finish the program!\nrobot.drive(7);\nrobot.turnRight();\nrobot.drive(7);\nrobot.turnRight();\n\n" }, "modifiedTime" : "2013-04-24T14:30:16.431Z", "name" : "Spiral", "original" : "for(var i=0; i<63; i++) {\n  robot.drive(1);\n  if(robot.detectGoal()) {\n    robot.turnRight();\n  }\n}", "outputStates" : { "robot" : "{\"columns\":8,\"rows\":8,\"initialX\":0,\"initialY\":7,\"initialAngle\":90,\"mazeObjects\":15,\"verticalActive\":[[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false]],\"horizontalActive\":[[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false]],\"blockGoal\":[[true,false,false,false,false,false,false,false],[false,true,false,false,false,false,false,true],[false,false,true,false,false,false,true,false],[false,false,false,true,false,true,false,false],[false,false,false,true,true,false,false,false],[false,false,true,false,false,true,false,false],[false,true,false,false,false,false,true,false],[true,false,false,false,false,false,false,true]]}" }, "published" : true, "userId" : "7a897ade-2161-46b0-8fcb-d1a87a961318" },
    "5190d667c8b92b02000000af": { "_id" : "5190d667c8b92b02000000af", "configProgram" : "config.outputs.robot.enabled = true;\nconfig.dare.maxLines = 18;\nconfig.dare.RobotGoal.previewBlockSize = 32;\nconfig.dare.RobotGoal.goalReward = 100;\nconfig.dare.RobotGoal.optionalGoals = 1;", "createdTime" : "2013-05-13T12:02:47.582Z", "description" : "<p>Now try this.</p>", "editor" : { "hideToolbar" : false, "text" : "function oddeven(n) {\n  // complete this function\n}\nrobot.turnLeft();\nfor (var i=0; i<=5; i++) {\n  robot.drive(1);\n  oddeven(i);\n}\nrobot.drive(1);" }, "modifiedTime" : "2013-06-15T14:05:45.641Z", "name" : "Odd & even", "original" : "function oddeven(n) {\n  robot.turnRight();\n  robot.drive(1);\n  if (n%2==0) {\n    robot.drive(1);\n  }\n  robot.turnLeft();\n  robot.turnLeft();\n  robot.drive(1);\n  if (n%2==0) {\n    robot.drive(1);\n  }\n  robot.turnRight();\n}\nrobot.turnLeft();\nfor (var i=0; i<=5; i++) {\n  robot.drive(1);\n  oddeven(i);\n}\nrobot.drive(1);", "outputStates" : { "robot" : "{\"columns\":8,\"rows\":8,\"initialX\":7,\"initialY\":3,\"initialAngle\":90,\"mazeObjects\":21,\"verticalActive\":[[false,false,false,false,false,false,false,false],[false,false,false,false,false,true,true,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,true,true,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,true,true,false],[false,false,false,false,false,true,true,false],[false,false,false,false,false,false,false,false]],\"horizontalActive\":[[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,true],[false,false,false,false,false,false,false,false],[false,false,false,false,false,true,false,true],[false,false,false,false,false,true,false,true],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,true],[false,false,false,false,false,false,false,false]],\"blockGoal\":[[false,false,false,true,false,false,false,false],[false,false,true,false,false,false,false,false],[false,true,false,false,false,false,false,false],[false,false,true,false,false,false,false,false],[false,true,false,false,false,false,false,false],[false,false,true,false,false,false,false,false],[false,true,false,false,false,false,false,false],[false,false,false,false,false,false,false,false]]}" }, "published" : true, "userId" : "a37a631b-4c69-4fab-88f6-b28b22f5edfa" },
    "51ba228cec49dc020000000a": { "_id" : "51ba228cec49dc020000000a", "configProgram" : "config.outputs.robot.enabled = false;\nconfig.dare.maxLines = 30;\nconfig.dare.RobotGoal.previewBlockSize = 32;\nconfig.outputs.robot.rows = 6;\nconfig.outputs.robot.columns = 6;\n", "createdTime" : "2013-06-13T19:50:36.223Z", "description" : "<p>Visit all the targets. Use functions for recurring sequence of moves. </p>", "editor" : { "hideToolbar" : false, "text" : "// Finish the program!\n\n// this function drives the robot into a cul-de-sac \n// then turns it around and drives it out\nfunction visitCulDeSac(){\n  robot.turnRight();\n  robot.drive(1);\n  // Finish the function!\n  \n}\n\nrobot.drive(1);\nvisitCulDeSac();\n" }, "modifiedTime" : "2013-06-13T20:09:38.678Z", "name" : "Cul-de-sac", "original" : "function visitCulDeSac(){\n  robot.turnRight();\n  robot.drive(1);\n  robot.turnLeft();\n  robot.turnLeft();\n  robot.drive(1);\n  robot.turnRight(); \n}\n\nfunction driveAroundCorner(){\n  robot.drive(2);\n  robot.turnLeft();\n  robot.drive(1); \n}\n\nrobot.drive(1);\nvisitCulDeSac();\ndriveAroundCorner();\nvisitCulDeSac();\ndriveAroundCorner();\nvisitCulDeSac();\ndriveAroundCorner();\nvisitCulDeSac();", "outputStates" : { "robot" : "{\"columns\":6,\"rows\":6,\"initialX\":4,\"initialY\":4,\"initialAngle\":90,\"mazeObjects\":32,\"verticalActive\":[[false,false,false,false,false,false],[false,true,false,true,true,false],[false,false,true,true,false,true],[true,false,false,false,false,true],[true,false,true,true,false,false],[false,true,true,false,true,false]],\"horizontalActive\":[[false,false,true,true,false,false],[false,true,false,false,false,true],[false,true,true,false,true,false],[false,false,true,false,true,true],[false,true,false,false,false,true],[false,false,false,true,true,false]],\"blockGoal\":[[false,false,true,false,false,false],[false,false,false,false,false,false],[false,false,false,false,false,true],[true,false,false,false,false,false],[false,false,false,false,false,false],[false,false,false,true,false,false]]}" }, "published" : true, "userId" : "ad754213-b859-4c44-9c8b-ebb5aba6dc6f" },
    "51ba2a4fec49dc020000000c": { "_id" : "51ba2a4fec49dc020000000c", "configProgram" : "config.outputs.robot.enabled = true;\nconfig.dare.maxLines = 30;\nconfig.dare.RobotGoal.previewBlockSize = 32;\nconfig.outputs.robot.rows = 8;\nconfig.outputs.robot.columns = 8;", "createdTime" : "2013-06-13T20:23:43.538Z", "description" : "<p>Visit all the targets. </p>", "editor" : { "hideToolbar" : false, "text" : "// Finish the program!\n\n// this function drives the robot\n// in to a cul-de-sac of length n\nfunction visitCulDeSac(n){\n  robot.turnRight();\n  robot.drive(n);\n  robot.turnLeft(); \n  robot.turnLeft();\n  robot.drive(n);\n  robot.turnRight();  \n}\n\nrobot.drive(1);\nvisitCulDeSac(1);\n" }, "modifiedTime" : "2013-06-13T20:30:59.269Z", "name" : "Cul-de-sac 2", "original" : "function visitCulDeSac(n){\n  robot.turnRight();\n  robot.drive(n);\n  robot.turnLeft(); \n  robot.turnLeft();\n  robot.drive(n);\n  robot.turnRight();  \n}\n\nfunction driveAroundCorner(){\n  robot.drive(2);\n  robot.turnLeft();\n  robot.drive(1);\n}\n\nrobot.drive(1);\nvisitCulDeSac(1);\ndriveAroundCorner();\nvisitCulDeSac(3);\ndriveAroundCorner();\nvisitCulDeSac(2);\ndriveAroundCorner();\nvisitCulDeSac(1);\n\n", "outputStates" : { "robot" : "{\"columns\":8,\"rows\":8,\"initialX\":5,\"initialY\":6,\"initialAngle\":90,\"mazeObjects\":39,\"verticalActive\":[[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,true,false,true,true,false],[false,false,false,false,true,true,false,true],[true,true,true,false,false,false,false,true],[true,true,true,false,true,true,false,false],[false,false,false,true,true,false,true,false],[false,false,false,false,false,true,false,false]],\"horizontalActive\":[[false,false,false,false,true,true,false,false],[false,false,false,false,true,true,false,false],[false,false,false,true,false,false,false,true],[false,false,false,true,true,false,true,false],[false,false,false,false,true,false,true,true],[false,false,false,true,false,false,false,true],[false,false,false,false,false,true,true,false],[false,false,false,false,false,false,false,false]],\"blockGoal\":[[false,false,false,false,true,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,true],[true,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,true,false,false],[false,false,false,false,false,false,false,false]]}" }, "published" : true, "userId" : "ad754213-b859-4c44-9c8b-ebb5aba6dc6f" },
    "51bda7898af98a020000001c": { "_id" : "51bda7898af98a020000001c", "configProgram" : "config.dare.maxLines = 25;\nconfig.outputs.canvas.enabled = true;\nconfig.outputs.canvas.size = 512;\nconfig.outputs.robot.enabled = false;\nconfig.dare.type = \"ImageMatch\";", "createdTime" : "2013-06-16T11:54:49.289Z", "description" : "<p>The verticalLine(pos) function draws the vertical lines. Study this function. Then complete the implementation of the horizontalLine(pos) function. \nFinally, finish the drawing of an 8 by 8 grid. </p>", "editor" : { "hideToolbar" : false, "text" : "var context = canvas.getContext(\"2d\");\n\n// total width of the canvas\nvar width = 512;\n// distance between lines\nvar unit = 64;\n\n// this functions draws a vertical line \n// from top to bottom at position n\nfunction verticalLine(pos){\n  context.fillStyle = \"#171717\";\n  context.fillRect(unit*pos-1, 0, 2, width);   \n}\n\n// this bit draws a 8 vertical lines \n// equally spaced\nfor ( var i = 1; i < 8; i++){\n  verticalLine(i);\n}\n\n\n// horizontal line from side to side\nfunction horizontalLine(pos){\n  context.fillStyle = \"#171717\";  \n  // finish the function\n}\n\n// this bit draws a 8 vertical lines \n// equally spaced\nfor ( var i = 1; i < 8; i++){\n  horizontalLine(i);\n}" }, "modifiedTime" : "2013-06-16T16:06:48.681Z", "name" : "Draw a grid", "original" : "var context = canvas.getContext(\"2d\");\n\n// total width of the canvas\nvar width = 512;\n// distance between lines\nvar unit = 64;\n\n// this functions draws a vertical line \n// from top to bottom at position n\n// the line is made of a narrow rectangle\nfunction verticalLine(pos){\n  context.fillStyle = \"#171717\";\n  context.fillRect(unit*pos-1, 0, 2, width);   \n}\n\n// this bit draws a 8 vertical lines \n// equally spaced\nfor ( var i = 1; i < 8; i++){\n  verticalLine(i);\n}\n\n\n// horizontal line from side to side\nfunction horizontalLine(pos){\n  context.fillStyle = \"#171717\";  \n  // finish the function\n  context.fillRect(0,unit*pos-1,width, 2); \n}\n\n// this bit draws a 8 vertical lines \n// equally spaced\nfor ( var i = 1; i < 8; i++){\n  horizontalLine(i);\n}", "outputStates" : { "robot" : "" }, "published" : true, "userId" : "ad754213-b859-4c44-9c8b-ebb5aba6dc6f" },
    "51bdac0d8af98a0200000021": { "_id" : "51bdac0d8af98a0200000021", "configProgram" : "config.outputs.robot.enabled = false;\nconfig.outputs.canvas.enabled = true;\nconfig.outputs.canvas.size = 256;\nconfig.dare.maxLines = 30;\nconfig.dare.type = \"ImageMatch\";\n", "createdTime" : "2013-06-16T12:14:05.681Z", "description" : "<p>Let's draw a small chess board. Study how the first two rows are drawn. Finish the board. </p>", "editor" : { "hideToolbar" : false, "text" : "var context = canvas.getContext(\"2d\");\n\n\nvar unit = 64;\n\nfunction isEven(value){\n  return value%2 == 0;\n}\n\nfunction isOdd(value){\n  return value%2 == 1;\n}\n\n// this bit here draws the squares in the first row\nfor (var i = 0; i<4; i++){\n if(  isEven(i) ){\n   context.fillRect(i*unit, 0, unit, unit); \n }\n}\n\n// this bit here draws the suqares in the second raw\nfor (var i = 0; i<4; i++){\n if(  isOdd(i) ){\n   context.fillRect(i*unit, unit, unit, unit); \n }\n}\n" }, "modifiedTime" : "2013-06-16T12:38:45.617Z", "name" : "Chess board", "original" : "var context = canvas.getContext(\"2d\");\n\n\nvar unit = 64;\n\nfunction isEven(value){\n  return value%2 == 0;\n}\n\nfunction isOdd(value){\n  return value%2 == 1;\n}\n\nfor (var i = 0; i<4; i++){\n if(  isEven(i) ){\n   context.fillRect(i*unit, 0, unit, unit); \n }\n}\n\nfor (var i = 0; i<4; i++){\n if(  isOdd(i) ){\n   context.fillRect(i*unit, unit, unit, unit); \n }\n}\n\nfor (var i = 0; i<4; i++){\n if(  isEven(i) ){\n   context.fillRect(i*unit, 2*unit, unit, unit); \n }\n}\n\nfor (var i = 0; i<4; i++){\n if(  isOdd(i) ){\n   context.fillRect(i*unit, 3*unit, unit, unit); \n }\n}\n", "outputStates" : { "robot" : "" }, "published" : true, "userId" : "ad754213-b859-4c44-9c8b-ebb5aba6dc6f" },
    "52210602fa6f73020000001f": { "_id" : "52210602fa6f73020000001f", "configProgram" : "config.dare.type = \"ImageMatch\";\nconfig.dare.maxLines = 21;\nconfig.outputs.math.enabled = true;\nconfig.outputs.canvas.enabled = true;", "createdTime" : "2013-08-30T20:52:18.828Z", "description" : "<p>Sometimes when making a game, a bit of tricky math is required. The goal is to draw a circle made of 20 squares, centered on the page. Use the code on the right to get started!</p>\n\n<p><strong>Need a hint?</strong> You'll need to use javascript's Math functions.</p>", "editor" : { "hideToolbar" : false, "text" : "// Finish the program!\nvar rad = 150, context = canvas.getContext(\"2d\");\n\nfor(var i=0; i<20; i++){\n  context.fillRect(251, 251, 10, 10);\n}" }, "modifiedTime" : "2013-09-06T16:25:31.004Z", "name" : "Circling Squares", "original" : "var context = canvas.getContext(\"2d\");\n\ncontext.fillRect(401, 251, 10, 10);\ncontext.fillRect(394, 298, 10, 10);\ncontext.fillRect(373, 340, 10, 10);\ncontext.fillRect(340, 373, 10, 10);\ncontext.fillRect(298, 394, 10, 10);\ncontext.fillRect(252, 401, 10, 10);\ncontext.fillRect(205, 394, 10, 10);\ncontext.fillRect(163, 373, 10, 10);\ncontext.fillRect(130, 340, 10, 10);\ncontext.fillRect(109, 298, 10, 10);\ncontext.fillRect(101, 252, 10, 10);\ncontext.fillRect(109, 205, 10, 10);\ncontext.fillRect(130, 163, 10, 10);\ncontext.fillRect(163, 130, 10, 10);\ncontext.fillRect(205, 109, 10, 10);\ncontext.fillRect(251, 101, 10, 10);\ncontext.fillRect(298, 109, 10, 10);\ncontext.fillRect(340, 130, 10, 10);\ncontext.fillRect(373, 163, 10, 10);\ncontext.fillRect(394, 205, 10, 10);", "outputStates" : { "robot" : "" }, "published" : true, "userId" : "33e6deab-f05b-43e2-a5ae-a50c7b912380" },
    "522343d40f7a09020000001b": { "_id" : "522343d40f7a09020000001b", "configProgram" : "config.dare.type = \"ImageMatch\";\nconfig.outputs.canvas.enabled = true;\nconfig.dare.maxLines = 5;\n\n", "createdTime" : "2013-09-01T13:40:36.952Z", "description" : "<p>\nA block is thrown in the air and then accelerates back down. The position of the block is drawn every few seconds, resulting in the image on the right. Your task is to copy this image as good as possible, in as few lines of code as you can.\n</p>", "editor" : { "hideToolbar" : false, "text" : "var context = canvas.getContext(\"2d\");\n\nfor (var i=0; i<20; i++){\n  context.fillRect(10, 10, 50, 50);\n}" }, "modifiedTime" : "2013-09-01T13:43:48.170Z", "name" : "Gravity", "original" : "var context = canvas.getContext(\"2d\");\n\nfor (var i=0; i<20;i++){\n  context.fillRect(10+i*24, 270+i*-65+i*i*4, 50, 50);\n}", "outputStates" : { "robot" : "" }, "published" : true, "userId" : "f0a4cfd2-24d3-4b85-9d0d-0a946630d1f0" },
    "5276dafd60b798020000000d": { "_id" : "5276dafd60b798020000000d", "configProgram" : "alert(\"Hello\")", "createdTime" : "2013-11-03T23:23:41.289Z", "description" : "lol", "editor" : { "hideToolbar" : false, "text" : "alert(\"Nooby\")" }, "modifiedTime" : "2013-11-03T23:25:30.108Z", "name" : "test", "original" : "console.log(\"Noob\")", "outputStates" : { "robot" : "" }, "published" : true, "userId" : "c4cfd5e1-0b27-4c0d-b40c-adc579e8727e" },
    "5304c854c3656b020000001d": { "_id" : "5304c854c3656b020000001d", "configProgram" : "config.outputs.robot.enabled = true;\nconfig.dare.maxLines = 10;\nconfig.dare.RobotGoal.previewBlockSize = 32;\n", "createdTime" : "2014-02-19T15:05:56.747Z", "description" : "<p>Some example instructions...</p>\nrobot.drive(3);\nrobot.turnLeft();\nrobot.drive(3);\n", "editor" : { "hideToolbar" : false, "text" : "// Finish the program!\nrobot.drive(3);\n" }, "modifiedTime" : "2014-02-19T15:11:18.504Z", "name" : "robots", "original" : "robot.drive(3);\nrobot.turnLeft();\nrobot.drive(3);\n", "outputStates" : { "robot" : "{\"columns\":8,\"rows\":8,\"initialX\":4,\"initialY\":7,\"initialAngle\":90,\"mazeObjects\":0,\"verticalActive\":[[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false]],\"horizontalActive\":[[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false]],\"blockGoal\":[[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false]]}" }, "published" : true, "userId" : "97359bbc-1ea6-49a3-8637-3dca0360ccba" },
    "5304e0dcc3656b0200000027": { "_id" : "5304e0dcc3656b0200000027", "name" : "Untitled Dare", "description" : "<p>Some example instructions...</p>", "published" : true, "editor" : { "hideToolbar" : false, "text" : "// Finish the program!\nrobot.drive(3);\n" }, "original" : "robot.drive(3);\nrobot.turnLeft();\nrobot.drive(3);\n", "configProgram" : "config.outputs.robot.enabled = true;\nconfig.dare.maxLines = 10;\nconfig.dare.RobotGoal.previewBlockSize = 32;\n", "outputStates" : { "robot" : "" }, "userId" : "97359bbc-1ea6-49a3-8637-3dca0360ccba", "createdTime" : "2014-02-19T16:50:36.845Z", "modifiedTime" : "2014-02-19T16:56:47.269Z" },
    "530c9e7df2b6ce0200000001": { "_id" : "530c9e7df2b6ce0200000001", "configProgram" : "config.outputs.robot.enabled = true;\nconfig.dare.maxLines = 10;\nconfig.dare.RobotGoal.previewBlockSize = 32;\n", "createdTime" : "2014-02-25T13:45:33.751Z", "description" : "config.outputs.robot.enabled =true;\nconfig.dare.maxLines = 10;\nconfig.dare.RobotGoal.previewBlockSize = 32;\n\n", "editor" : { "hideToolbar" : false, "text" : "// Finish the program!\nrobot.drive(3);\n" }, "modifiedTime" : "2014-02-25T13:48:09.371Z", "name" : "", "original" : "robot.drive(3);\nrobot.turnLeft();\nrobot.drive(3);\n", "outputStates" : { "robot" : "" }, "published" : true, "userId" : "14e37706-dfef-4868-b968-75a38ef53b80" },
    "53b9e860cc83850200be5bcb": { "_id" : "53b9e860cc83850200be5bcb", "configProgram" : "config.outputs.robot.enabled = true;\nconfig.dare.hidePreview = true;\nconfig.outputs.math.enabled = true;", "createdTime" : "2014-07-07T00:22:56.576Z", "description" : "The functions and variables in this program allows a simulation for basic autonomous programs written in RobotC. The robot behaves as a robot with two motorized wheels. The only available functions are motorLeft(), motorRight(), and wait1Msec(). In Robot C, motorLeft() and motorRight() would be defined in this way: void motorLeft(int power) {motor[leftMotorName] = power;} and void motorRight(int power) {motor[rightMotorName] = power;} Motor values are between -100 and 100.", "editor" : { "hideToolbar" : false, "text" : "//Preview your autonomous Programs! Please Code Below//\n\n//DO NOT TOUCH THIS CODE//\nvar l = 0;\nvar r = 0;\n\nfunction sign(x){\n  if(x != 0) {\n    return x/Math.abs(x);\n  } else {\n    return 0;\n  }\n}\n\nfunction drive(l,r,waitParameter){\n  var turn;\n  var flipVar = 1;\n  if(Math.abs(l) > Math.abs(r)) {\n    flipVar = -1;\n  } else if(Math.abs(l) < Math.abs(r)) {\n    flipVar = 1;\n  }\n  var speed = flipVar*(l+r)/200.0;\n  var angElapse = speed*Math.abs(waitParameter)*9/25;\n  var distI = 0.1;\n  if(l == 0 && r == 0) {\n    turn = 0;\n    angElapse = 0;\n    distI = 0;\n  } else if(l == r){\n    turn = 0;\n    angElapse = speed * Math.abs(waitParameter)/50;\n  } else if(l == -r){\n    speed = sign(r);\n    turn = 6;\n    distI = 0;\n    angElapse = speed*Math.abs(waitParameter)*9/25;\n  } else {\n    turn = 40*(r-l)/(l+r);\n  }\n  var turnDrive = sign(turn*angElapse)*distI;\n  var turnAngle = sign(angElapse)*Math.abs(turn);\n  var zeroDrive = sign(angElapse)*distI;\n  if(turn != 0){\n    for(var i = 0; i < Math.abs(angElapse/turn); i++) {\n      robot.drive(turnDrive);\n      robot.turnLeft(turnAngle);\n    }\n  } else{\n    for(var i = 0; i < Math.abs(angElapse); i++) {\n      robot.drive(zeroDrive);\n    }\n  }\n}\n\nfunction motorLeft(val){\n  l = val;\n}\n\nfunction motorRight(val){\n  r = val;\n}\n\nfunction wait1Msec(time) {\n  drive(l,r, time);\n}\n//DO NOT TOUCH THIS CODE//\n\n//Preview your autonomous Programs! Please Code Here//\n\nmotorLeft(100);\nmotorRight(100);\nwait1Msec(500);\nmotorRight(100);\nmotorLeft(50);\nwait1Msec(666);\n" }, "modifiedTime" : "2014-07-15T06:30:32.757Z", "name" : "RobotC: Autonomous Control Drawing Board", "original" : "//Preview your autonomous Programs! Please Code Below//\n\n//DO NOT TOUCH THIS CODE//\nvar l = 0;\nvar r = 0;\n\nfunction sign(x){\n  if(x != 0) {\n    return x/Math.abs(x);\n  } else {\n    return 0;\n  }\n}\n\nfunction drive(l,r,waitParameter){\n  var turn;\n  var flipVar = 1;\n  if(Math.abs(l) > Math.abs(r)) {\n    flipVar = -1;\n  } else if(Math.abs(l) < Math.abs(r)) {\n    flipVar = 1;\n  }\n  var speed = flipVar*(l+r)/200.0;\n  var angElapse = speed*Math.abs(waitParameter)*9/25;\n  var distI = 0.1;\n  if(l == 0 && r == 0) {\n    turn = 0;\n    angElapse = 0;\n    distI = 0;\n  } else if(l == r){\n    turn = 0;\n    angElapse = speed * Math.abs(waitParameter)/50;\n  } else if(l == -r){\n    speed = sign(r);\n    turn = 6;\n    distI = 0;\n    angElapse = speed*Math.abs(waitParameter)*9/25;\n  } else {\n    turn = 40*(r-l)/(l+r);\n  }\n  var turnDrive = sign(turn*angElapse)*distI;\n  var turnAngle = sign(angElapse)*Math.abs(turn);\n  var zeroDrive = sign(angElapse)*distI;\n  if(turn != 0){\n    for(var i = 0; i < Math.abs(angElapse/turn); i++) {\n      robot.drive(turnDrive);\n      robot.turnLeft(turnAngle);\n    }\n  } else{\n    for(var i = 0; i < Math.abs(angElapse); i++) {\n      robot.drive(zeroDrive);\n    }\n  }\n}\n\nfunction motorLeft(val){\n  l = val;\n}\n\nfunction motorRight(val){\n  r = val;\n}\n\nfunction wait1Msec(time) {\n  drive(l,r, time);\n}\n//DO NOT TOUCH THIS CODE//\n\n//Preview your autonomous Programs! Please Code Here//\n\nmotorLeft(100);\nmotorRight(100);\nwait1Msec(500);\nmotorRight(100);\nmotorLeft(50);\nwait1Msec(666);\n", "outputStates" : { "robot" : "{\"columns\":8,\"rows\":8,\"initialX\":4,\"initialY\":7,\"initialAngle\":90,\"mazeObjects\":0,\"verticalActive\":[[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false]],\"horizontalActive\":[[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false]],\"blockGoal\":[[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false]]}" }, "published" : true, "userId" : "05e496a7-b6d1-49fa-9878-719b69a08384" },
    "53bb45aec3cfb002003fc117": { "_id" : "53bb45aec3cfb002003fc117", "configProgram" : "config.outputs.robot.enabled = true;\nconfig.dare.maxLines = 10;\nconfig.dare.RobotGoal.previewBlockSize = 32;\n", "createdTime" : "2014-07-08T01:13:18.400Z", "description" : "", "editor" : { "hideToolbar" : false, "text" : "// Finish the program!\nrobot.drive(3);\n" }, "modifiedTime" : "2014-07-08T01:18:30.488Z", "name" : "Robot", "original" : "robot.drive(3);\nrobot.turnLeft();\nrobot.drive(3);\nrobot.turnRight(93);\nrobot.drive(3);\nrobot.turnRight(87);\nrobot.drive(4);\nrobot.turnRight(87);\nrobot.drive(6);\nrobot.turnRight(87);\nrobot.drive(1);\n", "outputStates" : { "robot" : "{\"columns\":8,\"rows\":8,\"initialX\":4,\"initialY\":7,\"initialAngle\":90,\"mazeObjects\":0,\"verticalActive\":[[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false]],\"horizontalActive\":[[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false]],\"blockGoal\":[[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false]]}" }, "published" : true, "userId" : "2e35bf82-cc59-4836-bb9f-1c83c228318a" },
    "53c4aa13e1b33c02004ef297": { "_id" : "53c4aa13e1b33c02004ef297", "configProgram" : "config.dare.type = \"ConsoleMatch\";\nconfig.dare.ConsoleMatch.speed = 100;\nconfig.dare.ConsoleMatch.minPercentage = 95;", "createdTime" : "2014-07-15T04:12:03.754Z", "description" : "<p>Consoleで”私”をプリントしてください！</p>\n<p>がんばってください！</p>\n<h1>日本語は最高よ！</h1>", "editor" : { "hideToolbar" : false, "text" : "//このプログラムの使う事をおわってください！\nconsole.log(\"\"); " }, "modifiedTime" : "2014-07-16T01:29:24.371Z", "name" : "ノベライズ", "original" : "// このプログラムの使う事をおわってください！\nconsole.log(\"私\");", "outputStates" : { "robot" : "" }, "published" : true, "userId" : "daf68d4e-14b9-41c1-bd08-a0cae9b57531" },
    "53e48b568d576802007c6a33": { "_id" : "53e48b568d576802007c6a33", "configProgram" : "config.outputs.robot.enabled = true;\nconfig.dare.maxLines = 57;\nconfig.dare.RobotGoal.previewBlockSize = 32;\nconfig.dare.lineReward = 1;\nconfig.dare.RobotGoal.goalReward = 5;", "createdTime" : "2014-08-08T08:33:26.236Z", "description" : "<p>Let's see how good are you, at patterns...</p>", "editor" : { "hideToolbar" : false, "text" : "// Finish the program!\nrobot.drive(3);\n" }, "modifiedTime" : "2014-08-08T08:57:31.484Z", "name" : "Criss Cross", "original" : "robot.turnRight();\nrobot.drive(2);\nrobot.turnLeft();\nrobot.drive(2);//3rd box reuse\nrobot.turnLeft();\nrobot.drive(1);\nrobot.turnLeft();\nrobot.drive(1);\nrobot.turnLeft();\nrobot.drive(1);\nrobot.turnRight();\nrobot.drive(1);//3rd box reuse\nrobot.turnLeft();\nrobot.drive(1);\nrobot.turnLeft();\nrobot.drive(3);\nrobot.turnLeft();\nrobot.drive(3);\nrobot.turnLeft();\nrobot.drive(3);\nrobot.turnRight();\nrobot.drive(3);\nrobot.turnRight();//2nd box\nrobot.drive(2);\nrobot.turnRight();\nrobot.drive(1);\nrobot.turnRight();\nrobot.drive(1);\nrobot.turnRight();\nrobot.drive(1);\nrobot.turnLeft();\nrobot.drive(1);\nrobot.turnRight();\nrobot.drive(1);\nrobot.turnRight();\nrobot.drive(3);\nrobot.turnRight();\nrobot.drive(3);\nrobot.turnLeft();\nrobot.drive(1);\nrobot.turnLeft();\nrobot.drive(3);\nrobot.turnRight();//2nd box\nrobot.drive(3);\nrobot.turnRight();\nrobot.drive(1);\nrobot.turnRight();\nrobot.drive(2);//3rd box reuse\nrobot.turnLeft();\nrobot.drive(1);\nrobot.turnLeft();\nrobot.drive(1);\nrobot.turnLeft();\nrobot.drive(1);\nrobot.turnRight();\nrobot.drive(1);//3rd box reuse\nrobot.turnRight();//2nd box reuse\nrobot.drive(5);\nrobot.turnRight();\nrobot.drive(2);\nrobot.turnRight();\nrobot.drive(1);\nrobot.turnRight();\nrobot.drive(1);\nrobot.turnRight();\nrobot.drive(1);\nrobot.turnLeft();\nrobot.drive(1);\nrobot.turnRight();\nrobot.drive(1);\nrobot.turnRight();\nrobot.drive(3);\nrobot.turnRight();\nrobot.drive(3);\nrobot.turnLeft();//2nd box reuse", "outputStates" : { "robot" : "{\"columns\":8,\"rows\":8,\"initialX\":4,\"initialY\":7,\"initialAngle\":90,\"mazeObjects\":63,\"verticalActive\":[[false,false,false,false,false,false,false,false],[false,true,true,false,false,true,true,false],[false,false,false,false,false,false,false,false],[false,true,true,false,false,true,true,false],[false,true,true,true,true,true,true,false],[false,true,true,false,false,true,true,false],[false,false,false,false,false,false,false,false],[false,true,true,false,false,true,true,false]],\"horizontalActive\":[[false,false,false,false,false,false,false,false],[false,false,false,true,true,true,false,false],[false,true,false,true,true,true,false,true],[false,false,false,false,false,false,false,false],[false,false,false,false,true,false,false,false],[false,true,false,true,true,true,false,true],[false,false,false,true,true,true,false,false],[false,false,false,false,false,false,false,false]],\"blockGoal\":[[true,false,true,false,false,true,false,true],[false,true,false,false,false,false,true,false],[true,false,true,false,false,true,false,true],[false,false,false,true,true,false,false,false],[false,false,false,true,true,false,false,false],[true,false,true,false,false,true,false,true],[false,true,false,false,false,false,true,false],[true,false,true,false,false,true,false,true]]}" }, "published" : true, "userId" : "33997eb8-ecc3-43fd-8d94-592e31b48e3e" },
    "53e491248d576802007c6a34": { "_id" : "53e491248d576802007c6a34", "configProgram" : "config.outputs.robot.enabled = true;\nconfig.dare.maxLines = 10;\nconfig.dare.RobotGoal.previewBlockSize = 32;\nconfig.dare.lineReward = 1;\nconfig.dare.RobotGoal.goalReward = 5;", "createdTime" : "2014-08-08T08:58:12.973Z", "description" : "<p>Let's see how good you are at patterns...</p>", "editor" : { "hideToolbar" : false, "text" : "// Finish the program!\nrobot.drive(3);\n" }, "modifiedTime" : "2014-08-08T09:10:01.473Z", "name" : "Criss Cross", "original" : "robot.turnRight();\nrobot.drive(2);\nrobot.turnLeft();\nrobot.drive(1);//3rd box reuse\nrobot.detectGoal();\nrobot.drive(1);\nrobot.turnLeft();\nrobot.drive(1);\nrobot.detectGoal();\nrobot.turnLeft();\nrobot.drive(1);\nrobot.turnLeft();\nrobot.drive(1);\nrobot.turnRight();\nrobot.drive(1);//3rd box reuse\nrobot.turnLeft();\nrobot.drive(1);\nrobot.detectGoal();\nrobot.turnLeft();\nrobot.drive(3);\nrobot.turnLeft();\nrobot.drive(3);\nrobot.detectGoal();\nrobot.turnLeft();\nrobot.drive(3);\nrobot.turnRight();\nrobot.drive(3);\nrobot.turnRight();//2nd box\nrobot.drive(1);\nrobot.detectGoal();\nrobot.drive(1);\nrobot.turnRight();\nrobot.drive(1);\nrobot.detectGoal();\nrobot.turnRight();\nrobot.drive(1);\nrobot.turnRight();\nrobot.drive(1);\nrobot.turnLeft();\nrobot.drive(1);\nrobot.turnRight();\nrobot.drive(1);\nrobot.detectGoal();\nrobot.turnRight();\nrobot.drive(3);\nrobot.turnRight();\nrobot.drive(3);\nrobot.detectGoal();\nrobot.turnLeft();\nrobot.drive(1);\nrobot.detectGoal();\nrobot.turnLeft();\nrobot.drive(3);\nrobot.turnRight();//2nd box\nrobot.drive(3);\nrobot.detectGoal();\nrobot.turnRight();\nrobot.drive(1);\nrobot.turnRight();\nrobot.drive(1);//3rd box reuse\nrobot.detectGoal();\nrobot.drive(1);\nrobot.turnLeft();\nrobot.drive(1);\nrobot.detectGoal();\nrobot.turnLeft();\nrobot.drive(1);\nrobot.turnLeft();\nrobot.drive(1);\nrobot.turnRight();\nrobot.drive(1);//3rd box reuse\nrobot.turnRight();//2nd box reuse\nrobot.drive(5);\nrobot.turnRight();\nrobot.drive(1);\nrobot.detectGoal();\nrobot.drive(1);\nrobot.turnRight();\nrobot.drive(1);\nrobot.detectGoal();\nrobot.turnRight();\nrobot.drive(1);\nrobot.turnRight();\nrobot.drive(1);\nrobot.turnLeft();\nrobot.drive(1);\nrobot.turnRight();\nrobot.drive(1);\nrobot.detectGoal();\nrobot.turnRight();\nrobot.drive(3);\nrobot.turnRight();\nrobot.drive(3);\nrobot.detectGoal();\nrobot.turnLeft();//2nd box reuse", "outputStates" : { "robot" : "{\"columns\":8,\"rows\":8,\"initialX\":4,\"initialY\":7,\"initialAngle\":90,\"mazeObjects\":57,\"verticalActive\":[[false,false,false,false,false,false,false,false],[false,true,true,false,false,true,true,false],[false,false,false,false,false,false,false,false],[false,true,true,false,false,true,true,false],[false,true,true,true,true,true,true,false],[false,true,true,false,false,true,true,false],[false,false,false,false,false,false,false,false],[false,true,true,false,false,true,true,false]],\"horizontalActive\":[[false,false,false,false,true,false,false,false],[false,false,false,true,true,true,false,false],[false,true,false,true,true,true,false,true],[false,false,false,false,false,false,false,false],[false,false,false,false,true,false,false,false],[false,true,false,true,true,true,false,true],[false,false,false,true,true,true,false,false],[false,false,false,false,true,false,false,false]],\"blockGoal\":[[true,false,false,false,false,false,false,true],[false,true,false,false,false,false,true,false],[false,false,true,false,false,true,false,false],[false,false,false,true,true,false,false,false],[false,false,false,true,true,false,false,false],[false,false,true,false,false,true,false,false],[false,true,false,false,false,false,true,false],[true,false,false,false,false,false,false,true]]}" }, "published" : true, "userId" : "bc7420b0-1765-4305-85d2-3e25cc6351a9" },
    "5426f8bca5e2ac020076a9c7": { "_id" : "5426f8bca5e2ac020076a9c7", "configProgram" : "config.outputs.robot.enabled = true;\nconfig.dare.maxLines = 10;\nconfig.dare.RobotGoal.previewBlockSize = 32;\n", "createdTime" : "2014-09-27T17:49:48.461Z", "description" : "If you complete this you might want to work on your time management.", "editor" : { "hideToolbar" : false, "text" : "// Finish the program!\nrobot.drive(3);\n" }, "modifiedTime" : "2014-09-27T17:55:26.724Z", "name" : "The maze", "original" : "robot.drive(3);\nrobot.turnLeft();\nrobot.drive(3);\n", "outputStates" : { "robot" : "{\"columns\":8,\"rows\":8,\"initialX\":4,\"initialY\":7,\"initialAngle\":90,\"mazeObjects\":45,\"verticalActive\":[[false,false,false,false,false,false,false,false],[false,true,false,false,false,false,false,false],[false,true,true,true,true,true,true,true],[false,true,true,true,true,true,true,false],[true,true,false,false,false,false,false,false],[false,true,true,true,false,false,false,false],[true,true,false,false,true,true,true,true],[false,true,true,false,false,false,false,true]],\"horizontalActive\":[[false,false,false,false,true,false,true,false],[false,true,false,true,false,true,false,false],[false,false,false,false,false,false,false,false],[false,false,false,true,false,false,false,false],[false,false,false,true,false,false,false,false],[false,false,false,true,true,false,false,false],[false,false,false,true,false,true,false,false],[false,false,false,false,false,false,false,false]],\"blockGoal\":[[false,false,false,false,false,false,false,true],[false,false,true,false,false,false,false,true],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,true,true,false,false,false],[false,false,false,false,false,false,false,true],[false,false,false,false,false,false,false,false]]}" }, "published" : true, "userId" : "26240550-b67d-464a-9db8-2ec820923cf8" },
    "545f2a3b0eaf3e02006fb2f9": { "_id" : "545f2a3b0eaf3e02006fb2f9", "configProgram" : "config.outputs.robot.enabled = true;\nconfig.dare.maxLines = 8;\nconfig.dare.RobotGoal.previewBlockSize = 1;\n", "createdTime" : "2014-11-09T08:47:55.716Z", "description" : "<p>reach every square in 8 lines of code without overloading</p>", "editor" : { "hideToolbar" : false, "text" : "var counter = ;\nvar x = ;\nwhile(counter < x){\n    robot.drive();\n  if(robot.detectGoal()){\n\n    }\n}" }, "modifiedTime" : "2014-11-10T16:17:23.636Z", "name" : "Stop and Turn", "original" : "var counter = 0;\nwhile(counter < 19){\n    robot.turnLeft();\n    while (robot.detectWall()) {\n      robot.turnRight();\n    }\n    robot.drive();\n  if(robot.detectGoal()){\n    counter++;\n    }\n}", "outputStates" : { "robot" : "{\"columns\":8,\"rows\":8,\"initialX\":4,\"initialY\":7,\"initialAngle\":90,\"mazeObjects\":30,\"verticalActive\":[[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,true,false],[false,false,false,false,false,true,false,false],[false,false,false,false,true,false,false,false],[false,false,false,true,false,false,false,false],[false,false,true,false,false,false,false,false],[false,true,false,false,false,false,false,false],[false,false,false,false,false,false,false,false]],\"horizontalActive\":[[false,false,false,false,false,false,false,true],[false,false,false,false,false,false,true,false],[false,false,false,false,false,true,false,false],[false,false,false,false,true,false,false,false],[false,false,false,true,false,false,false,false],[false,false,true,false,false,false,false,false],[false,true,false,false,false,false,false,false],[false,false,false,false,false,false,false,false]],\"blockGoal\":[[true,false,false,false,false,false,true,true],[false,false,false,false,false,true,true,false],[false,false,false,false,true,true,false,false],[false,false,false,true,true,false,false,false],[false,false,true,true,false,false,false,false],[false,true,true,false,false,false,false,false],[true,true,false,false,false,false,false,false],[true,false,false,false,false,false,false,true]]}" }, "published" : true, "userId" : "75d44291-280a-432a-b64e-fd315b51a85d" },
    "54cbced0ce6b6c0300ef42b7": { "_id" : "54cbced0ce6b6c0300ef42b7", "name" : "Chessboard", "description" : "<p id=\"1\">    Try to get through all the goal squares. You need to write the function though.</p>", "published" : true, "editor" : { "hideToolbar" : false, "text" : "function f() {\n  \n}" }, "original" : "function f1() {\n  robot.drive(7);\n  robot.turnRight();\n  robot.drive();\n  robot.turnRight();\n  robot.drive(7);\n  robot.turnLeft();\n  robot.drive(1);\n  robot.turnLeft();\n  f1();\n}\nf1();", "configProgram" : "config.outputs.robot.enabled = true;\nconfig.dare.maxLines = 20;\nconfig.dare.RobotGoal.previewBlockSize = 32;\nconfig.dare.RobotGoal.goalReward = 5;\nconfig.dare.RobotGoal.optionalGoals = 0;\nconfig.dare.type = \"RobotGoal\";", "outputStates" : { "robot" : "{\"columns\":8,\"rows\":8,\"initialX\":0,\"initialY\":7,\"initialAngle\":90,\"mazeObjects\":32,\"verticalActive\":[[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false]],\"horizontalActive\":[[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false]],\"blockGoal\":[[true,false,true,false,true,false,true,false],[false,true,false,true,false,true,false,true],[true,false,true,false,true,false,true,false],[false,true,false,true,false,true,false,true],[true,false,true,false,true,false,true,false],[false,true,false,true,false,true,false,true],[true,false,true,false,true,false,true,false],[false,true,false,true,false,true,false,true]]}" }, "userId" : "e6c020f1-2520-4c9f-9462-dca5511d672b", "createdTime" : "2015-01-30T18:34:56.742Z", "modifiedTime" : "2015-02-01T19:18:55.152Z" },
    "54cbd27ece6b6c0300ef42b9": { "_id" : "54cbd27ece6b6c0300ef42b9", "name" : "Loki's Labyrinth", "description" : "<p id=\"1\">There is a shortcut, but it would waste valuable lines. Try using the while(){} function</p>", "published" : true, "editor" : { "hideToolbar" : false, "text" : "while() {\n  robot.\n  \\\\Finish The Progam!\n}\n" }, "original" : "while(1==1){\n  if(robot.detectWall()==false) {\n    robot.drive(1);\n  } else {\n    robot.turnLeft();\n  }\n}", "configProgram" : "config.outputs.robot.enabled = true;\nconfig.dare.maxLines = 5;\nconfig.dare.RobotGoal.previewBlockSize = 20;\n", "outputStates" : { "robot" : "{\"columns\":8,\"rows\":8,\"initialX\":7,\"initialY\":7,\"initialAngle\":90,\"mazeObjects\":17,\"verticalActive\":[[false,false,false,false,false,false,false,false],[false,false,true,false,true,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,true,false,false],[false,false,false,false,false,false,true,false],[false,false,false,false,false,false,false,true],[false,false,true,false,false,true,false,false],[false,false,false,true,false,false,false,false]],\"horizontalActive\":[[false,false,false,false,false,false,false,false],[false,false,false,false,true,false,true,false],[false,false,true,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,true,false,false,false],[false,false,false,false,false,false,false,false],[false,false,true,false,false,false,true,false],[false,false,false,false,false,true,true,false]],\"blockGoal\":[[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,true,false,false]]}" }, "userId" : "e6c020f1-2520-4c9f-9462-dca5511d672b", "createdTime" : "2015-01-30T18:50:38.821Z", "modifiedTime" : "2015-02-05T13:55:27.369Z" },
    "54ce78db1f423303008b23e3": { "_id" : "54ce78db1f423303008b23e3", "name" : "Zoo 2", "description" : "<p id=\"1\">Create a farm with 16 pigs in it.</p>\n", "published" : true, "editor" : { "hideToolbar" : false, "text" : "var context = canvas.getContext(\"2d\");\n//green\ncontext.fillStyle = \"#03DC03\";\n//black\ncontext.fillStyle = \"#000000\";" }, "original" : "var context = canvas.getContext(\"2d\");\nfunction f(x,y) {\ncontext.fillStyle = \"#000000\";\ncontext.fillRect(140+x, 30+y, 70, 70);\ncontext.fillRect(35+x, 65+y, 140, 70);\ncontext.fillRect(35+x, 65+y, 30, 130);\ncontext.fillRect(145+x, 65+y, 30, 130);\ncontext.fillStyle = \"#03DC03\";\ncontext.fillRect(195+x, 50+y, 10, 10);\ncontext.fillRect(180+x, 70+y, 30, 10);\n}\nf(0,0);\nf(0,250);\nf(250,0);\nf(250,250);\nf(500,0);\nf(0,500);\nf(500,250);\nf(250,500);\nf(500,500);\nf(750,0);\nf(0,750);\nf(250,750);\nf(750,250);\nf(500,750);\nf(750,500);\nf(750,750);\nf(1000,0);\nf(0,1000);\nf(1000,250);\nf(250,1000);", "configProgram" : "config.outputs.canvas.enabled = true;\nconfig.dare.maxLines = 35;\nconfig.outputs.canvas.size = 1024;\nconfig.dare.type = \"ImageMatch\";\nconfig.dare.ImageMatch.minPercentage = 93.75;\nconfig.dare.ImageMatch.speed = 200;", "outputStates" : { "robot" : "" }, "userId" : "e6c020f1-2520-4c9f-9462-dca5511d672b", "createdTime" : "2015-02-01T19:04:59.689Z", "modifiedTime" : "2015-03-18T19:15:52.207Z" },
    "5540a17df9953103000e8922": { "_id" : "5540a17df9953103000e8922", "name" : "Test Game", "description" : "<p>Some example instructions...</p>", "published" : true, "editor" : { "hideToolbar" : false, "text" : "// Finish the program!\nrobot.drive(3);\n" }, "original" : "robot.drive(3);\nrobot.turnLeft();\nrobot.drive(3);\n", "configProgram" : "config.outputs.robot.enabled = true;\nconfig.dare.maxLines = 10;\nconfig.dare.RobotGoal.previewBlockSize = 32;\n", "outputStates" : { "robot" : "" }, "userId" : "9523ed70-1e62-40c7-8073-57fca931526d", "createdTime" : "2015-04-29T09:16:45.524Z", "modifiedTime" : "2015-04-29T09:17:12.566Z" },
    "5581658a4cbdf903003ea769": { "_id" : "5581658a4cbdf903003ea769", "name" : "Hello World", "description" : "<p><b>Robot must drive.", "published" : true, "editor" : { "hideToolbar" : false, "text" : "// Finish the program!\nrobot.drive(3);\n" }, "original" : "robot.drive(3);\nrobot.turnLeft();\nrobot.drive(3);\nrobot.turnRight();\nrobot.drive(1);\nrobot.turnRight();\nrobot.drive(3);\nrobot.turnLeft();\nrobot.drive(3);\nrobot.turnLeft();\nrobot.drive(2);\nrobot.turnLeft();\nrobot.drive(7);\nrobot.detectGoal();", "configProgram" : "config.outputs.robot.enabled = true;\nconfig.dare.maxLines = 10;\nconfig.dare.RobotGoal.previewBlockSize = 32;\n", "outputStates" : { "robot" : "" }, "userId" : "97391994-786f-43d4-bf35-b618c6536b64", "createdTime" : "2015-06-17T12:18:18.057Z", "modifiedTime" : "2015-06-17T12:24:01.241Z" },
    "559802096efea10300904a9a": { "_id" : "559802096efea10300904a9a", "name" : "MAKE IT THROUGH THE MAZE", "description" : "", "published" : true, "editor" : { "hideToolbar" : false, "text" : "// Finish the program!\nrobot.drive(3);\n" }, "original" : "\nrobot.turnLeft();\n", "configProgram" : "config.outputs.robot.enabled = true;\nconfig.dare.maxLines = 10;\nconfig.dare.RobotGoal.previewBlockSize = 32;\n", "outputStates" : { "robot" : "{\"columns\":8,\"rows\":8,\"initialX\":7,\"initialY\":0,\"initialAngle\":90,\"mazeObjects\":46,\"verticalActive\":[[false,false,false,false,false,false,false,false],[false,true,true,true,true,true,false,false],[true,false,false,false,false,false,true,false],[false,true,true,true,true,false,false,false],[false,false,false,false,true,false,false,false],[true,false,true,false,false,true,true,false],[false,true,false,true,false,false,true,false],[false,false,true,true,true,true,true,false]],\"horizontalActive\":[[false,false,false,false,false,false,false,false],[false,false,false,true,false,true,true,true],[false,false,true,false,true,false,false,false],[false,false,false,false,false,false,true,true],[false,true,true,true,false,true,true,true],[false,false,false,false,true,true,false,false],[false,true,true,true,false,false,false,true],[false,true,false,false,false,false,false,false]],\"blockGoal\":[[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,true,false,false,false,false,false,false],[false,false,false,false,false,false,false,false]]}" }, "userId" : "2e91ce63-12de-42a9-b015-6421b3e8814f", "createdTime" : "2015-07-04T15:55:53.880Z", "modifiedTime" : "2015-07-04T16:03:31.201Z" },
    "559d4f66941b2203007d75e3": { "_id" : "559d4f66941b2203007d75e3", "name" : "Do it your way", "description" : "<p>Just collect all the green squares.</p>", "published" : true, "editor" : { "hideToolbar" : false, "text" : "// Finish the program!\nrobot.drive(3);\n" }, "original" : "function drive(distance) {\n  robot.drive(distance);\n  robot.turnRight();\n  robot.drive(distance);\n  robot.turnRight();\n}\nrobot.drive(7);\nrobot.turnRight();\nfor (var i = 7; i > 0; i--) {\n  drive(i);\n}", "configProgram" : "config.outputs.robot.enabled = true;\nconfig.dare.maxLines = 10;\nconfig.dare.RobotGoal.previewBlockSize = 32;\n", "outputStates" : { "robot" : "{\"columns\":8,\"rows\":8,\"initialX\":0,\"initialY\":7,\"initialAngle\":90,\"mazeObjects\":112,\"verticalActive\":[[false,false,false,false,false,false,false,false],[false,true,true,true,true,true,true,true],[false,false,true,true,true,true,true,false],[false,false,false,true,true,true,false,false],[false,false,false,false,true,false,false,false],[false,false,false,true,true,false,false,false],[false,false,true,true,true,true,false,false],[false,true,true,true,true,true,true,false]],\"horizontalActive\":[[false,false,false,false,false,false,false,false],[false,true,false,false,false,false,false,false],[false,true,true,false,false,false,false,true],[false,true,true,true,false,false,true,true],[false,true,true,true,false,true,true,true],[false,true,true,false,false,false,true,true],[false,true,false,false,false,false,false,true],[false,false,false,false,false,false,false,false]],\"blockGoal\":[[true,true,true,true,true,true,true,false],[true,true,true,true,true,true,true,true],[true,true,true,true,true,true,true,true],[true,true,true,true,true,true,true,true],[true,true,true,true,true,true,true,true],[true,true,true,true,true,true,true,true],[true,true,true,true,true,true,true,true],[true,true,true,true,true,true,true,true]]}" }, "userId" : "bf4e0eac-79a8-45ae-a789-bb5af6913aed", "createdTime" : "2015-07-08T16:27:18.668Z", "modifiedTime" : "2015-07-08T16:33:23.275Z" },
    "565f67479ac6aa030014af9e": { "_id" : "565f67479ac6aa030014af9e", "name" : "corner cutting", "description" : "<p>Some example instructions...</p>\n<p>you can use while and if statements to get all the goals.</p>", "published" : true, "editor" : { "hideToolbar" : false, "text" : "// Finish the program!\nrobot.turnLeft();\nrobot.drive(2);\nrobot.turnRight();\n" }, "original" : "var g = 0;\nwhile(!robot.detectGoal()){\n  if(robot.detectWall()){\n    robot.turnLeft();\n    if(robot.detectWall()){\n      robot.turnRight(180);\n    }\n  }else{\n    robot.drive(1);\n  }\n}\n\n", "configProgram" : "config.outputs.robot.enabled = true;\nconfig.dare.maxLines = 13;\nconfig.dare.RobotGoal.previewBlockSize = 32;\n", "outputStates" : { "robot" : "{\"columns\":8,\"rows\":8,\"initialX\":4,\"initialY\":7,\"initialAngle\":90,\"mazeObjects\":21,\"verticalActive\":[[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,true,false],[false,true,false,false,false,false,false,false],[false,true,false,false,false,false,false,false],[false,false,false,false,true,false,true,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,true,false,false,true,false,false,false]],\"horizontalActive\":[[false,true,false,false,false,false,false,false],[false,true,false,false,false,false,false,true],[false,false,false,false,false,false,false,false],[false,true,false,false,false,false,false,true],[false,true,false,false,true,false,false,false],[false,true,false,false,false,false,false,false],[false,true,false,false,false,true,false,false],[false,false,false,false,false,false,false,false]],\"blockGoal\":[[true,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,true,true],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,true,false,false,false,false,false,false],[false,false,false,false,false,false,false,false]]}" }, "userId" : "28bf5562-99a0-4f78-a152-4bd37b98899d", "createdTime" : "2015-12-02T21:48:55.241Z", "modifiedTime" : "2015-12-02T22:00:30.225Z" },
    "570108e08268ab030009ee0c": { "_id" : "570108e08268ab030009ee0c", "name" : "Face", "description" : "<p>draw face</p>", "published" : true, "editor" : { "hideToolbar" : false, "text" : "\n// Finish the program!\nvar context = canvas.getContext(\"2d\");\nfunction draw(x,y) {\n  context.fillRect(x+50, y+50, 25, 25);\n}\n// vertical line\nvar x=1;\nvar y=25;\nvar z=400;" }, "original" : "\nvar context = canvas.getContext(\"2d\");\nfunction draw(x,y) {\n  context.fillRect(x+50, y+50, 25, 25);\n}\n// vertical line\nvar x=1;\nvar y=25;\nvar z=400;\nfor(var i=1; i<15; i++){\n  draw(x,i*y);\n  draw(z,i*y);\n}\n// horizontal line\nx=25;\nz=350;\nfor(var i=1; i<16; i++) {\n  draw(x*i,y);\n  draw(x*i,z);\n}\ndraw(100,100);\ndraw(300,100);\nx=100;\nz=250;\nfor(var i=0; i<9; i++) {\n  draw(x+(y*i),z);\n}\n", "configProgram" : "config.outputs.canvas.enabled = true;\nconfig.outputs.canvas.size = 512;\nconfig.outputs.robot.enabled = false;\nconfig.dare.type = \"ImageMatch\";\nconfig.dare.maxLines = 0;\nconfig.dare.lineReward = 200;\nconfig.dare.hidePreview = false;\n", "outputStates" : { "robot" : "" }, "userId" : "edf86228-d296-406b-be5c-6c449c6e281e", "createdTime" : "2016-04-03T12:13:20.922Z", "modifiedTime" : "2016-04-13T08:31:49.457Z" },
    "570dfec931b4e50300386b5b": { "_id" : "570dfec931b4e50300386b5b", "name" : "Radiation", "description" : "<p>Some example instructions...</p>", "published" : true, "editor" : { "hideToolbar" : false, "text" : "// Finish the program!\n" }, "original" : "var context = canvas.getContext(\"2d\");\n\ncontext.lineWidth = 1;\nvar w = canvas.width;\nvar h = canvas.height;\n\nfunction rad(angle) {\nreturn angle * (Math.PI / 180);\n}\n\nfor (var angle = 0; angle < 90; angle += 5) {\n  context.beginPath();\n  context.moveTo(0, 0);\n  context.lineTo(w, w);\n  context.closePath();\n  context.stroke();\n}\n\n", "configProgram" : "config.outputs.canvas.enabled = true;\nconfig.outputs.canvas.size = 512;\nconfig.outputs.robot.enabled = false;\nconfig.dare.type = \"ImageMatch\";\nconfig.dare.maxLines = 0;\nconfig.dare.lineReward = 200;\nconfig.dare.hidePreview = false;\nconfig.outputs.math.enabled = true;", "outputStates" : { "robot" : "" }, "userId" : "edf86228-d296-406b-be5c-6c449c6e281e", "createdTime" : "2016-04-13T08:09:45.571Z", "modifiedTime" : "2016-04-20T08:48:40.984Z" },
    "57172540edc93303002f7f57": { "_id" : "57172540edc93303002f7f57", "name" : "draw radiation", "description" : "<p>四角のなかに、中心からの放射線を描いてください</p>\n<p>サンプルは45度の線が描かれています</p>\n", "published" : true, "editor" : { "hideToolbar" : false, "text" : "var context = canvas.getContext(\"2d\");\n\ncontext.lineWidth = 1;\n\nvar startX=50;\nvar startY=50;\nvar endX=450;\nvar endY=450;\n\nfunction init() {\n  context.beginPath();\n  context.moveTo(startX, startY);\n  context.lineTo(endX, startY);\n  context.lineTo(endX, endY);\n  context.lineTo(startX, endY);\n  context.closePath();\n  context.stroke();\n}\n\n\n// main\ninit();\ncontext.beginPath();\ncontext.moveTo(startX, startY);\ncontext.lineTo(endX, endY);\ncontext.closePath();\ncontext.stroke();\n" }, "original" : "var context = canvas.getContext(\"2d\");\n\ncontext.lineWidth = 1;\n\nvar startX=50;\nvar startY=50;\nvar endX=450;\nvar endY=450;\n\nfunction init() {\n  context.beginPath();\n  context.moveTo(startX, startY);\n  context.lineTo(endX, startY);\n  context.lineTo(endX, endY);\n  context.lineTo(startX, endY);\n  context.closePath();\n  context.stroke();\n}\n\nfunction drawCanvas(sx, sy, ex, ey) {\n  context.beginPath();\n\n  context.moveTo(sx+startX, sy+startY);\n  context.lineTo(ex+startX, ey+startY);\n\n  context.closePath();\n  context.stroke();\n}\n\n\n// main\ninit();\n\nvar w = endX-startX;\nvar h = endY-startY;\nvar det = 8;\nfor(var i = 0; i <= det; i++) {\n  drawCanvas(w*(i/det),0,w*((det-i)/det),h);\n  drawCanvas(0,h*(i/det),w,h*((det-i)/det));\n}", "configProgram" : "config.outputs.canvas.enabled = true;\nconfig.outputs.canvas.size = 512;\nconfig.outputs.robot.enabled = false;\nconfig.dare.type = \"ImageMatch\";\nconfig.dare.maxLines = 0;\nconfig.dare.lineReward = 200;\nconfig.dare.hidePreview = false;\n\nconfig.outputs.math.enabled = true;", "outputStates" : { "robot" : "" }, "userId" : "123d4196-74f2-4de6-a1b8-ea24337a9c5e", "createdTime" : "2016-04-20T06:44:16.678Z", "modifiedTime" : "2016-04-26T23:49:15.487Z" },
    "5724f5105caaf2030070321b": { "_id" : "5724f5105caaf2030070321b", "name" : "a pirate life 3.0", "description" : "pirate ship (with cannons)\nblast the sharks'/target//enemy\n", "published" : true, "editor" : { "hideToolbar" : false, "text" : "// Finish the program!\npirate drive!!//awesome\n" }, "original" : "robot.drive(3);\nrobot.turnLeft();\npirate.//ships();\n", "configProgram" : "config.outputs.robot.enabled = true;\nconfig.dare.maxLines = 10;\nconfig.dare.RobotGoal.previewBlockSize = 32;\nuse arrow keys to move''()pirate ship=charecter&&)", "outputStates" : { "robot" : "" }, "userId" : "a8103b45-c61c-43a4-aa22-471c6a4a0e72", "createdTime" : "2016-04-30T18:10:24.048Z", "modifiedTime" : "2016-04-30T18:17:41.569Z" },
    "57327aa67cf7c60300e8f7ef": { "_id" : "57327aa67cf7c60300e8f7ef", "name" : "四角と三角", "description" : "枠数を自由に変更可能\n四角色：red, yellow\n三角色：green", "published" : true, "editor" : { "hideToolbar" : false, "text" : "var context = canvas.getContext(\"2d\");\n\nvar split = 6;\nvar cw = canvas.width / split;\nvar cwHalf = cw /2;\nvar ch = canvas.height / split;\n\ncontext.fillRect(0, 0, canvas.width, canvas.height);" }, "original" : "var context = canvas.getContext(\"2d\");\n\nvar split = 8;\nvar cw = canvas.width / split;\nvar cwHalf = cw /2;\nvar ch = canvas.height / split;\n\n// 三角を書く\nfunction darwTriangle(lw, lh, i, j) {\n  context.beginPath();\n  context.fillStyle = \"green\";\n  \n  context.moveTo(lw * i + cwHalf, lh * j);\n  context.lineTo(lw * (i + 1), lh * (j + 1));\n  context.lineTo(lw * i, lh * (j + 1));\n  context.closePath();\n  context.fill();\n}\n\n// 四角を書く\nfunction drawCorner(x, y, color) {\n  context.fillStyle = color;\n  context.fillRect(x, y, cw, ch);\n}\n\n// 偶数\nfunction isEven(i , j) {\n  if (i % 2 == 0 && j % 2 == 0) {\n    return true;\n  }\n  return false;\n}\n\n// 奇数\nfunction isOdd(i, j) {\n  if (i % 2 != 0 && j % 2 != 0) {\n    return true;\n  }\n  return false;\n}\n\nfor (var i = 0; i < split; i++) {\n  for (var j = 0; j < split; j++) {\n    var color = \"red\";\n    var isTriangle = false;\n    if (isEven(i, j) || isOdd(i, j)) {\n      color = \"yellow\";\n      isTriangle = true;\n    }\n    drawCorner(i* ch, j * ch, color);\n    if (isTriangle) {\n       darwTriangle(cw, ch, i, j);\n    }\n }\n}", "configProgram" : "config.outputs.canvas.enabled = true;\nconfig.outputs.canvas.size = 512;\nconfig.outputs.robot.enabled = false;\nconfig.dare.type = \"ImageMatch\";\nconfig.dare.maxLines = 0;\nconfig.dare.lineReward = 200;\nconfig.dare.hidePreview = false;", "outputStates" : { "robot" : "" }, "userId" : "12ac6d3b-ca05-47d7-90fc-6031e22029cd", "createdTime" : "2016-05-11T00:19:50.746Z", "modifiedTime" : "2016-05-11T02:54:30.591Z" },
    "573acfa49924ef03006f528e": { "_id" : "573acfa49924ef03006f528e", "name" : "MoveCircles", "description" : "<p>19個の●が左上から右下へ移動します。</p>\n<p>Move 19 circles from upper-left to rower-right.</p>", "published" : true, "editor" : { "hideToolbar" : false, "text" : "// Finish the program!\nvar context = canvas.getContext(\"2d\");\ncontext.strokeStyle = \"#00f\";\ncontext.fillStyle = \"#de20c5\";" }, "original" : "var context = canvas.getContext(\"2d\");\ncontext.strokeStyle = \"#00f\";\ncontext.fillStyle = \"#de20c5\";\n\nfunction drawCircle(x, y, scale) {\n  context.beginPath();\n  context.arc(x / 2, y / 2, scale /2 , 0, 3.14*2, false);\n  context.fill();\n  context.closePath();\n}\n\nfunction clearCanvas() {\n  context.clearRect(0, 0, canvasSize, canvasSize);\n}\n\nvar circleNum = 19;\nvar canvasSize = 400;\nvar width = canvasSize / 10;\nvar height = canvasSize / 10;\nvar scale = canvasSize / 10;\n\nfor (var i = 1; i <= circleNum; i++) {\n  clearCanvas();\n  drawCircle(width * i , height * i, scale);\n}\n\nclearCanvas();", "configProgram" : "config.outputs.canvas.enabled = true;\nconfig.outputs.canvas.size = 400;\nconfig.outputs.robot.enabled = false;\nconfig.dare.type = \"ImageMatch\";\nconfig.dare.maxLines = 0;\nconfig.dare.lineReward = 200;\nconfig.dare.hidePreview = false;\n\n", "outputStates" : { "robot" : "" }, "userId" : "3767ff24-b7d5-4ca7-bd9a-8d479f1dc573", "createdTime" : "2016-05-17T08:00:36.843Z", "modifiedTime" : "2016-05-18T06:45:26.506Z" },
    "573aee8b9924ef03006f5299": { "_id" : "573aee8b9924ef03006f5299", "name" : "Circles", "description" : "<p>canvas.size=400のキャンバスを半径40の円で埋め尽くす</p>\n<p>Fill the canvas(size=400) in a circle with a radius of 40.</p>", "published" : true, "editor" : { "hideToolbar" : false, "text" : "var context = canvas.getContext(\"2d\");\ncontext.strokeStyle = \"#891be3\";" }, "original" : "var context = canvas.getContext(\"2d\");\ncontext.strokeStyle = \"#891be3\";\n\nfunction drawCircle(x, y, scale) {\n  context.beginPath();\n  context.arc(x, y, scale , 0, 3.14*2, false);\n  context.stroke();\n  context.closePath();\n}\n\nvar canvasSize = 400;\nvar x = 0;\nvar y = 0;\nvar scale = canvasSize / 10;\nvar isOdd = true;\n\nwhile (y <= canvasSize) {\n  if (isOdd) {\n    x = scale;\n    while (x < canvasSize) {\n      drawCircle(x , y, scale);\n      x += scale;\n    }\n  } else {\n    x = 0;\n    while (x <= canvasSize) {\n      drawCircle(x , y, scale);\n      x += scale;\n    }\n  }\n  y += scale;\n  isOdd = !isOdd;\n}", "configProgram" : "config.outputs.canvas.enabled = true;\nconfig.outputs.canvas.size = 400;\nconfig.outputs.robot.enabled = false;\nconfig.dare.type = \"ImageMatch\";\nconfig.dare.maxLines = 0;\nconfig.dare.lineReward = 200;\nconfig.dare.hidePreview = false;\n", "outputStates" : { "robot" : "" }, "userId" : "3767ff24-b7d5-4ca7-bd9a-8d479f1dc573", "createdTime" : "2016-05-17T10:12:27.788Z", "modifiedTime" : "2016-05-18T07:16:32.962Z" },
    "5742e9b6a6c36503009358f7": { "_id" : "5742e9b6a6c36503009358f7", "name" : "piza", "description" : "<p>make piza.</p>\n<br>\n半径１８０、耳３０の６分割されたピザを作る\nサラミは各ピースの中心にある\n\n\n\n", "published" : true, "editor" : { "hideToolbar" : false, "text" : "// Finish the program!\nvar context = canvas.getContext(\"2d\");\nvar x=250;\nvar y=250;\n\nvar r=180;\nvar sr=150;\n\nvar d=6;\n\nvar sarami_r=20;\nvar c=\"yellow\";\nvar sarami_c=\"red\";\n\n" }, "original" : "var context = canvas.getContext(\"2d\");\n\nvar x=250;\nvar y=250;\n\nvar r=180;\nvar sr=150;\n\nvar d=6;\n\nvar sarami_r=20;\nvar c=\"yellow\";\nvar sarami_c=\"red\";\n\n\n\nfunction pan(i,r){\n  context.beginPath();\n  context.arc(x, y, r, 2*Math.PI/d*i, 2*Math.PI/d*(i+1) );\n  context.lineTo(x, y);\n  context.closePath();\n  context.stroke();\n  context.fillStyle = c;\n  context.fill(); \n}\n\nfunction sarami(x,y){\n  context.beginPath();\n  context.fillStyle = \"black\";\n  context.arc(x, y, sarami_r, 0, Math.PI*2 );\n  context.stroke();\n  context.fillStyle = sarami_c;\n  context.fill();\n}\n\nfor(var i=0; i<d; i++){\n  pan(i,r);\n  pan(i,sr);\n}\n\nfor(var i=0; i<d; i++){\n  var sx=x+Math.sin(2*Math.PI/d*i)*r/2;\n  var sy=y+Math.cos(2*Math.PI/d*i)*r/2;\n  sarami(sx,sy);\n}", "configProgram" : "config.outputs.canvas.enabled = true;\nconfig.dare.maxLines = 0;\nconfig.dare.ImageMatch.minPercentage = 95;\nconfig.outputs.math.enabled = true;\n//config.outputs.info.enabled = true;\nconfig.dare.type = \"ImageMatch\";\nconfig.dare.hidePreview = false;\nconfig.dare.lineReward = 200;\nconfig.outputs.canvas.size = 512;", "outputStates" : { "robot" : "" }, "userId" : "2c280ef2-df7d-44fd-ba0b-b6c4ff8913d7", "createdTime" : "2016-05-23T11:29:58.973Z", "modifiedTime" : "2016-05-25T07:33:43.012Z" },
    "574e1fa1557a0203005e0eca": { "_id" : "574e1fa1557a0203005e0eca", "name" : "windows", "description" : "だんだん描かれるwindows", "published" : true, "editor" : { "hideToolbar" : false, "text" : "var context = canvas.getContext(\"2d\");\nvar time = 500;\nvar color1 = \"#a1070d\";\nvar color1 = \"#01a61c\";\nvar color3 = \"#0522a2\";\nvar color1 = \"#a4a103\";" }, "original" : "var context = canvas.getContext(\"2d\");\nvar t1 = 0;\nvar t2 = 0;\nvar t3 = 0;\nvar t4 = 0;\nvar cw = canvas.width / 2;\nvar ch = canvas.height / 2;\n\nfunction tick1() {\n    context.clearRect(0, 0, canvas.width, canvas.height);\n  context.fillRect(0, 0, t1, t1);\n  context.fillStyle =  \"#a79f00\";\n  t1 += 5;\n  if (t1 > cw) {\n    t1 = 0;\n  }\n  context.fillRect(cw, ch, t2, t2);\n  context.fillStyle =  \"#01a61c\";\n  t2 += 5;\n  if (t2 > cw) {\n    t2 = 0;\n  }\n  context.fillRect(cw, 0, t3, t3);\n  context.fillStyle =  \"#0522a2\";\n  t3 += 5;\n  if (t3 > ch) {\n    t3 = 0;\n  }\n    context.fillRect(0, ch, t4, t4);\n  context.fillStyle =  \"#a20404\";\n  t4 += 5;\n  if (t4 > cw) {\n    t4 = 0;\n  }\n}\nwindow.setInterval(tick1, 50);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "configProgram" : "config.outputs.canvas.enabled = true;\nconfig.outputs.canvas.size = 512;\nconfig.outputs.robot.enabled = false;\nconfig.dare.type = \"ImageMatch\";\nconfig.dare.maxLines = 0;\nconfig.dare.lineReward = 200;\nconfig.dare.hidePreview = false;\nconfig.outputs.events.enabled = true;\nconfig.outputs.info.enabled = true;\nconfig.outputs.math.enabled = true;\nconfig.dare.hidePreview = true;", "outputStates" : { "robot" : "" }, "userId" : "698a7fd2-8da3-4d6f-b4aa-8a38fc7b50e3", "createdTime" : "2016-05-31T23:34:57.893Z", "modifiedTime" : "2016-06-01T03:13:53.056Z" },
    "57552a482214ac03007250e7": { "_id" : "57552a482214ac03007250e7", "name" : "Windows", "description" : "<p>Some example instructions...</p>", "published" : true, "editor" : { "hideToolbar" : false, "text" : "var context = canvas.getContext(\"2d\");\nvar time = 500;\nvar color1 = \"#a1070d\"; // upper left\nvar color2 = \"#01a61c\"; // upper right\nvar color3 = \"#0522a2\"; // lower left\nvar color4 = \"#a4a103\"; // lower right" }, "original" : "var context = canvas.getContext(\"2d\");\nvar time = 500;\nvar color1 = \"#a1070d\"; // upper left\nvar color2 = \"#01a61c\"; // upper right\nvar color3 = \"#0522a2\"; // lower left\nvar color4 = \"#a4a103\"; // lower right\nvar t = 0;\n\nfunction draw() {\n  context.clearRect(0, 0, 512, 512);\n  \n  context.fillStyle = color1;\n  context.fillRect(0, 0, t, t);\n  \n  context.fillStyle = color2;\n  context.fillRect(260, 0, t, t);\n  \n  context.fillStyle = color3;\n  context.fillRect(0, 260, t, t);\n  \n  context.fillStyle = color4;\n  context.fillRect(260, 260, t, t);\n  t += 24;\n  if (t > 240) {\n    t = 0;\n  }\n}\n\n\nwindow.setInterval(draw, time);\n", "configProgram" : "config.outputs.canvas.enabled = true;\nconfig.outputs.canvas.size = 512;\nconfig.outputs.robot.enabled = false;\nconfig.outputs.events.enabled = true;\nconfig.dare.type = \"ImageMatch\";\nconfig.dare.maxLines = 0;\nconfig.dare.lineReward = 200;\nconfig.dare.hidePreview = false;", "outputStates" : { "robot" : "" }, "userId" : "c1070a3f-1a19-4744-be78-bbc7cb47d172", "createdTime" : "2016-06-06T07:46:16.654Z", "modifiedTime" : "2016-06-07T08:49:07.074Z" },
    "57afa656d125bf03004032d5": { "_id" : "57afa656d125bf03004032d5", "name" : "Cross Hair", "description" : "You have got the answer for this in your sights.  Aim high on this one and see if you can get it completed in less than 15 lines of code.  It is possible to get it in 13.", "published" : true, "editor" : { "hideToolbar" : false, "text" : "// Finish the program!\nrobot.drive(3);\n" }, "original" : "var goalcount=0;\n\nfunction turn() {\n  robot.turnLeft(90);\n  if (!robot.detectWall()){\n    return;\n  }\n  robot.turnLeft(180);\n  return;\n}\n\nwhile (goalcount < 4){\n  while (!robot.detectWall()) {\n    robot.drive(1);\n    if (robot.detectGoal()){\n      goalcount++;\n    }  \n  }\n  turn();\n}\n\n", "configProgram" : "config.outputs.robot.enabled = true;\nconfig.dare.maxLines = 15;\nconfig.dare.RobotGoal.previewBlockSize = 32;\nconfig.dare.RobotGoal.goalReward = 50;\nconfig.dare.RobotGoal.optionalGoals = 0;\nconfig.dare.lineReward = 50;\n", "outputStates" : { "robot" : "{\"columns\":8,\"rows\":8,\"initialX\":4,\"initialY\":7,\"initialAngle\":90,\"mazeObjects\":24,\"verticalActive\":[[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[true,false,false,false,false,false,false,true],[false,true,true,true,true,true,true,false],[true,false,false,false,false,false,false,true],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false]],\"horizontalActive\":[[false,false,false,true,false,true,false,false],[false,false,false,false,true,false,false,false],[false,false,false,false,true,false,false,false],[false,false,false,false,true,false,false,false],[false,false,false,false,true,false,false,false],[false,false,false,false,true,false,false,false],[false,false,false,false,true,false,false,false],[false,false,false,true,false,true,false,false]],\"blockGoal\":[[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,true,true,false,false,false],[false,false,false,true,true,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false]]}" }, "userId" : "af70de1d-6430-41a3-95d8-83ad694023c1", "createdTime" : "2016-08-13T22:59:34.884Z", "modifiedTime" : "2016-08-13T23:38:39.152Z" },
    "57afab53d125bf03004032dd": { "_id" : "57afab53d125bf03004032dd", "name" : "advanced forwardRight", "description" : "<p>You thought you did well the first time but as people we always need to be learning and growing. Try to code this and use minimal lines my record is 4</p>", "published" : true, "editor" : { "hideToolbar" : false, "text" : "// Finish the program!\nrobot.drive(3);\n" }, "original" : "\nwhile(!robot.detectGoal()){\n  robot.drive(1);\nif(robot.detectWall()){\n robot.turnRight();\n}\n}\n", "configProgram" : "config.outputs.robot.enabled = true;\nconfig.dare.maxLines = 5;\nconfig.dare.RobotGoal.previewBlockSize = 32;\n", "outputStates" : { "robot" : "{\"columns\":8,\"rows\":8,\"initialX\":0,\"initialY\":7,\"initialAngle\":90,\"mazeObjects\":50,\"verticalActive\":[[false,false,false,false,false,false,false,false],[false,true,true,true,true,true,true,true],[false,false,true,true,true,true,true,false],[false,false,false,true,true,true,false,false],[false,false,false,false,true,false,false,false],[false,false,false,true,true,false,false,false],[false,false,true,true,true,true,false,false],[false,true,true,true,true,true,true,false]],\"horizontalActive\":[[false,false,false,false,false,false,false,false],[false,true,false,false,false,false,false,false],[false,true,true,false,false,false,false,true],[false,true,true,true,false,false,true,true],[false,true,true,true,false,true,true,true],[false,true,true,false,false,false,true,true],[false,true,false,false,false,false,false,true],[false,false,false,false,false,false,false,false]],\"blockGoal\":[[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,true,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false]]}" }, "userId" : "43db039f-ab9e-45c1-9e37-d9324f09691a", "createdTime" : "2016-08-13T23:20:51.829Z", "modifiedTime" : "2016-08-13T23:34:27.971Z" },
    "58eae9b36fe8ca0400aa33ae": { "_id" : "58eae9b36fe8ca0400aa33ae", "name" : "Untitlgyjhlmh", "description" : "<p>Some examptests...</p> ,b", "published" : true, "editor" : { "hideToolbar" : false, "text" : "// Finish the program!\nrobot.drive(3);\n" }, "original" : "robot.drive(3);\nrobot.turnLeft();\nrobot.drive(3);\n", "configProgram" : "config.outputs.robot.enabled = true;\nconfig.dare.maxLines = 10;\nconfig.dare.RobotGoal.previewBlockSize = 32;\n", "outputStates" : { "robot" : "{\"columns\":8,\"rows\":8,\"initialX\":5,\"initialY\":6,\"initialAngle\":90,\"mazeObjects\":24,\"verticalActive\":[[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,true,false,false,false,false,false],[false,false,false,false,false,true,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,true,true,false],[false,false,false,false,false,true,true,false],[false,false,false,true,false,false,false,false]],\"horizontalActive\":[[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,true,false,false,false,false,false],[false,false,false,true,false,false,false,true],[false,false,false,false,true,true,false,false],[false,false,false,false,false,false,false,false]],\"blockGoal\":[[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false],[false,true,true,false,false,false,false,false],[false,false,true,true,false,false,true,false],[false,false,true,true,true,true,true,false],[false,false,false,true,false,false,false,false],[false,false,false,true,false,false,false,false]]}" }, "userId" : "d51d563e-6477-4383-8c11-650d7a498488", "createdTime" : "2017-04-10T02:10:59.555Z", "modifiedTime" : "2017-04-10T02:14:28.543Z" },
  }
};
